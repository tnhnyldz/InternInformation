 // GET: Admin
        Context c = new Context();

namespace InternInformation.Controllers
{
    public class HelpController : Controller
    {
        // GET: Help
        //help duzenleme anasayfa
        HelpManager hm = new HelpManager();
        public ActionResult Index()
        {
            var helps = hm.GetAll();
            return View(helps);
        }
        public ActionResult HelpPage()
        {
            var helps = hm.GetAll();
            return View(helps);
        }
        [HttpGet]
        public ActionResult UpdateHelp(int id)
        {
            var help = hm.GetByID(id);
            return View(help);
        }
        [HttpPost]
        public ActionResult UpdateHelp(Help p)
        {
            hm.UpdateHelp(p);
            return RedirectToAction("Index");
        }
        [HttpGet]
        public ActionResult AddHelp()
        {
            return View();
        }
        [HttpPost]
        public ActionResult AddHelp(Help p)
        {
            hm.AddHelpBusiness(p);
            return RedirectToAction("Index");
        }
        public ActionResult DeleteHelp(int id)
        {
            hm.DeleteHelp(id);
            return RedirectToAction("Index");
        }
    }
}namespace InternInformation.Controllers
{
    [Authorize]
    public class HomeController : Controller
    {
        public ActionResult Index()
        {
            return View();
        }

        public ActionResult About()
        {
            ViewBag.Message = "Your application description page.";

            return View();
        }

        public ActionResult Contact()
        {
            ViewBag.Message = "Your contact page.";

            return View();
        }
    }
}

namespace InternInformation.Controllers
{
    [Authorize]
    public class InternController : Controller
    {
        InternManager ım = new InternManager();
        #region[CRUD Kısmı] 

        // Stajları listeler

        public ActionResult Index(int sayfa = 1)
        {
            var interns = ım.GetAll()
                .ToPagedList(sayfa, 5);
            return View(interns);
        }
        //Stajları ekleyen actıon
        [HttpGet]
        public ActionResult AddNewIntern()
        {
            Context c = new Context();
            List<SelectListItem> InternTypes = (from x in c.InternNames.ToList()
                                                select new SelectListItem
                                                {
                                                    Text = x.InternNamee,
                                                    Value = x.InternNameID.ToString()
                                                }).ToList();
            ViewBag.InternTypes = InternTypes;
            List<SelectListItem> InternStatus = (from x in c.InternStatuss.ToList()
                                                 select new SelectListItem
                                                 {
                                                     Text = x.InternStatusName,
                                                     Value = x.InternStatusID.ToString()
                                                 }).ToList();
            ViewBag.InternStatus = InternStatus;
            List<SelectListItem> Students = (from x in c.Students.OrderBy(y => y.StudentName).ToList()
                                             select new SelectListItem
                                             {
                                                 Text = x.StudentName + " " + x.StudentSurname,
                                                 Value = x.StudentID.ToString()
                                             }).ToList();
            ViewBag.Students = Students;
            return View();
        }
        [HttpPost]
        public ActionResult AddNewIntern(Intern p)
        {
            if (Request.Files.Count > 0)
            {
                string dosyaadi = Path.GetFileNameWithoutExtension(Request.Files[0].FileName);
                string uzanti = Path.GetExtension(Request.Files[0].FileName);
                string yol = "~/StajBelgeleri2/" + dosyaadi + uzanti;
                Request.Files[0].SaveAs(Server.MapPath(yol));
                p.StajBelgesi = "/StajBelgeleri2/" + dosyaadi + uzanti;
                p.StajDefteri = null;
            }
            ım.AddInternBusiness(p);
            return RedirectToAction("Index");
        }
        //stajları guncelleyen actıon
        [HttpGet]
        public ActionResult InternUpdate(int id)
        {
            Context c = new Context();
            List<SelectListItem> InternTypes = (from x in c.InternNames.ToList()
                                                select new SelectListItem
                                                {
                                                    Text = x.InternNamee,
                                                    Value = x.InternNameID.ToString()
                                                }).ToList();
            ViewBag.InternTypes = InternTypes;
            List<SelectListItem> InternStatus = (from x in c.InternStatuss.ToList()
                                                 select new SelectListItem
                                                 {
                                                     Text = x.InternStatusName,
                                                     Value = x.InternStatusID.ToString()
                                                 }).ToList();
            ViewBag.InternStatus = InternStatus;
            List<SelectListItem> Students = (from x in c.Students.ToList()
                                             select new SelectListItem
                                             {
                                                 Text = x.StudentName + " " + x.StudentSurname,
                                                 Value = x.StudentID.ToString()
                                             }).ToList();
            ViewBag.Students = Students;
            var student = ım.Findintern(id);
            return View(student);
        }
        [HttpPost]
        public ActionResult InternUpdate(Intern p)
        {
            ım.UpdateIntern(p);
            return RedirectToAction("Index");
        }

        #endregion

        //onay bekleyen stajları gosteren actıon
        public ActionResult cRequired(int sayfa = 1)
        {
            var interns = ım.confirmRequiredBL();
            return View(interns);
        }
        //Onaylanmayan stajları gosteren actıon
        public ActionResult UnConfirmed()
        {
            var interns = ım.UnconfirmedBl();
            return View(interns);
        }
        //Onaylanan stajları gosteren actıon
        public ActionResult Confirmed()
        {
            var interns = ım.confirmedBl();
            return View(interns);
        }
        //Tamamlanan stajları gosteren actıon
        public ActionResult Completed()
        {
            var interns = ım.CompletedBl();
            return View(interns);
        }
        //Stajları Onaylayan actıon
        public ActionResult Confirm(int id)
        {
            ım.confirmIntern(id);
            return RedirectToAction("Index");
        }
        //Stajlardaki onayı kaldıran actıon
        public ActionResult UnConfirm(int id)
        {
            ım.unconfirmIntern(id);
            return RedirectToAction("Index");
        }
        //Onay bekleyen durumuna dusuren actıon
        public ActionResult confirmWaiting(int id)
        {
            var interns = ım.confirmWaiting(id);
            return RedirectToAction("Index");
        }
        //Stajı Tamamlayan actıon
        public ActionResult Complete(int id)
        {
            var interns = ım.completeBl(id);
            return RedirectToAction("Index");
        }

    }
}

namespace InternInformation.Controllers
{
    public class loginController : Controller
    {
        // GET: login
        Context c = new Context();
        HelperClass hc = new HelperClass();
        public ActionResult Index()
        {
            return View();
        }
        //admın gırısı
        [HttpGet]
        public ActionResult AdminLogin()
        {
            return View();
        }
        [HttpPost]
        public ActionResult AdminLogin(Admin p)
        {
            var admınSıfre = "396383";
            //giriş yapmaya çalışan adminin mail
            //adresinden md5 şifresini aldık
            var adminPassword = c.Admins
                .Where(x => x.AdminMail == p.AdminMail)
                .Select(x => x.Password)
                .FirstOrDefault();
            //Şifreyi normal hale getırdık
            var decryptedAdminPassword = hc.decrypt(adminPassword);

            //admın bılgılerını aldık
            var adminInfo = c.Admins.
                FirstOrDefault(x => x.AdminMail == p.AdminMail && decryptedAdminPassword == p.Password);
            if (adminInfo != null)
            {
                //adminInfo.Password = decryptedAdminPassword;
                FormsAuthentication.SetAuthCookie(adminInfo.AdminMail,false);
                Session["AdminMail"] = adminInfo.AdminMail;
                return RedirectToAction("Index", "Intern");

            }
            else
            {
                return RedirectToAction("AdminLogin", "login");
            }
        }
        //ogrencı gırısı
        [HttpGet]
        public ActionResult StudentLogin()
        {
            return View();
        }
        [HttpPost]
        public ActionResult StudentLogin(Student p)
        {
            var ogrencı ="tunahanyildiz@outlook.it";
            var sifre=123456;
            var ogrencı1 = "tunahandevv@gmail.com";
            var sifre1 = 794113;
            //giriş yapmaya çalışan ogrencının mail
            //adresinden md5 şifresini aldık
            var studentPassword = c.Students
                .Where(x => x.StudentMail == p.StudentMail)
                .Select(x => x.StudentPassword)
                .FirstOrDefault();
            //Şifreyi normal hale getırdık
            var decryptedStudentPassword = hc.decrypt(studentPassword);

            //ogrencı bılgılerını aldık
            var studentInfo = c.Students.
                FirstOrDefault(x => x.StudentMail == p.StudentMail && decryptedStudentPassword == p.StudentPassword);
            if (studentInfo != null)
            {
                //adminInfo.Password = decryptedAdminPassword;
                FormsAuthentication.SetAuthCookie(studentInfo.StudentMail, false);
                Session["StudentMail"] = studentInfo.StudentMail;
                return RedirectToAction("StudentPage", "Student");

            }
            else
            {
                return RedirectToAction("StudentLogin", "login");
            }
        }
        //ogretmen girisi
        [HttpGet]
        public ActionResult TeacherLogin()
        {
            return View();
        }
        [HttpPost]
        public ActionResult TeacherLogin(Teacher p)
        {
            var maıl = "tunahanyildiz1560@gmail.com";
            var sıfre = "926675";
            //giriş yapmaya çalışan öğretmenin MD5 şfresini aldık
            var TeacherPassword = c.Teachers
               .Where(x => x.TeacherMail == p.TeacherMail)
               .Select(x => x.TeacherPassword)
               .FirstOrDefault();
            //Şifreyi normal hale getırdık
            var decryptedTeacherPassword = hc.decrypt(TeacherPassword);

            //öğretmen bilgilerini aldık
            var TeacherInfo = c.Teachers.
                FirstOrDefault(x => x.TeacherMail == p.TeacherMail && decryptedTeacherPassword == p.TeacherPassword);
            if (TeacherInfo != null)
            {
                FormsAuthentication.SetAuthCookie(TeacherInfo.TeacherMail, false);
                Session["TeacherMail"] = TeacherInfo.TeacherMail;
                return RedirectToAction("TeacherHomePage", "Teacher");
            }
            else
            {
                return RedirectToAction("TeacherLogin", "login");
            }
        }
        public ActionResult LogOutAdmin()
        {
            FormsAuthentication.SignOut();
            Session.Abandon();
            return RedirectToAction("AdminLogin", "login");
        }
        public ActionResult LogOutStudent()
        {
            FormsAuthentication.SignOut();
            Session.Abandon();
            return RedirectToAction("StudentLogin", "login");
        }
        public ActionResult LogOutTeacher()
        {
            FormsAuthentication.SignOut();
            Session.Abandon();
            return RedirectToAction("TeacherLogin", "login");
        }
    }
}

namespace InternInformation.Controllers
{
    [Authorize]
    public class StudentController : Controller
    {
        StudentProfileManager spm = new StudentProfileManager();
        StudentManager sm = new StudentManager();
        InternManager ım = new InternManager();
        HelperClass helper = new HelperClass();
        //ogrencılerı getırıp sayfaya yazan actıon
        public ActionResult Index(int sayfa=1)
        {
            var students = sm.GetAll().ToPagedList(sayfa, 5);
            return View(students);
        }
        //ogrencılerı guncellemek ıcın gereken actıon 
        [HttpGet]
        public ActionResult StudentUpdate(int id)
        {
            Context c = new Context();
            List<SelectListItem> Teachers = (from x in c.Teachers.ToList()
                                             select new SelectListItem
                                             {
                                                 Text = x.TeacherName + " " + x.TeacherSurname,
                                                 Value = x.TeacherID.ToString()
                                             }).ToList();
            ViewBag.Teachers = Teachers;
            var student = sm.FindStudent(id);
            return View(student);
        }
        [HttpPost]
        public ActionResult StudentUpdate(Student p)
        {
            sm.UpdateStudent(p);
            return RedirectToAction("Index");
        }
        //öğrencılerı ekleyen metot
        [HttpGet]
        public ActionResult AddNewStudent()
        {
            Context c = new Context();
            List<SelectListItem> Teachers = (from x in c.Teachers.ToList()
                                             select new SelectListItem
                                             {
                                                 Text = x.TeacherName + " " + x.TeacherSurname,
                                                 Value = x.TeacherID.ToString()
                                             }).ToList();
            ViewBag.Teachers = Teachers;
            return View();
        }
        [HttpPost]
        public ActionResult AddNewStudent(Student p)
        {
            //yardımcı classdan bır nesne urettık
            HelperClass helper = new HelperClass();
            //eklenecek ogrencı ıcın rastgele bır sıfre olusturduk
            var password = helper.generatePassword();
            //ogrencinin mailini bir degiskene aldık
            string ogrMail = p.StudentMail;
            //ogrencının maılını ve sıfresını ona maıl atmak ıcın 
            //helper classdakı maıl gonder butonuna yolluyoruz
            helper.SendMailPassword(ogrMail, password);
            //şifreyi md5 yaptık
            var encryptedPass = helper.encrypt(password);

            p.StudentPassword = encryptedPass;


            sm.AddStudentBusiness(p);
            return RedirectToAction("Index");
        }
        //ogrencılerı pasif yapar sm sınıfındaki metodu kullanıyor
        public ActionResult StudentFalse(int id)
        {
            sm.StudentStatusFalse(id);
            return RedirectToAction("Index");
        }
        //ogrencılerı aktif yapar sm sınıfındaki metodu kullanıyor
        public ActionResult StudentTrue(int id)
        {
            sm.StudentStatusTrue(id);
            return RedirectToAction("Index");
        }
        //ÖĞRENCİ TEMPLATE KULLANAN ACTIONLAR
        //ogrencı anasayfa
        [HttpGet]
        public ActionResult StudentPage()
        {
            
            var p = (string)Session["StudentMail"];
            var studentProfile = spm.GetStudentByMail(p);
            var Password = studentProfile[0].StudentPassword;
            var DecryptedPassword= helper.decrypt(Password);
            studentProfile[0].StudentPassword = DecryptedPassword;
            return View(studentProfile);
        }
        [HttpPost]
        public ActionResult StudentPage(Student student)
        {

            var p = (string)Session["StudentMail"];

            var studentProfile = spm.GetStudentByMail(p);

            var teacherIDold = studentProfile[0].TeacherID;

            var newPassword = student.StudentPassword;

            var EncryptedPassword = helper.encrypt(newPassword);

            student.StudentPassword = EncryptedPassword;

            student.TeacherID = teacherIDold;
            
            sm.UpdateStudent(student);
            return RedirectToAction("StudentPage");
        }
        //ogrencıye aıt stajları getırır
        public ActionResult Interns()
        {
            var p = (string)Session["StudentMail"];
            var studentProfile = spm.GetStudentByMail(p);
            var Interns = spm.GetInternByStudentID(studentProfile[0].StudentID);
            return View(Interns);
        }
        //ogrencı staj basvuru yapma
        [HttpGet]
        public ActionResult apply()
        {
            var p = (string)Session["StudentMail"];
            var studentProfile = spm.GetStudentByMail(p);
            Context c = new Context();
            ViewBag.isim = studentProfile[0].StudentName;
            ViewBag.soyisim = studentProfile[0].StudentSurname;
            ViewBag.ID = studentProfile[0].StudentID;
            List<SelectListItem> InternTypes = (from x in c.InternNames.ToList()
                                                select new SelectListItem
                                                {
                                                    Text = x.InternNamee,
                                                    Value = x.InternNameID.ToString()
                                                }).ToList();
            ViewBag.InternTypes = InternTypes;
            var stajMetni = studentProfile[0].StudentName + "_" + studentProfile[0].StudentSurname + "-Başvuru_Belgesi";
            ViewBag.stajMetni = stajMetni;
            var stajDefteri = studentProfile[0].StudentName + "_" + studentProfile[0].StudentSurname + "-StajDefteri";
            ViewBag.stajDefteri = stajDefteri;
            return View();
        }
        [HttpPost]
        public ActionResult apply(Intern p)
        {
            ////dosyayı alıp proje ıcıne kaydedecek
            //string fileName = Path.GetFileNameWithoutExtension(p.UploadFile.FileName);
            //string extension = Path.GetExtension(p.UploadFile.FileName);
            //fileName = fileName + extension;
            //p.Filepath = "~/StajBelgeleri/" + fileName;
            //fileName = Path.Combine(Server.MapPath("~/StajBelgeleri/"), fileName);
            //p.UploadFile.SaveAs(fileName);

            ////dosyayı alıp proje ıcıne kaydedecek
            ////buraya if koyulup default belge adı verılecek

            //string fileName2 = "Staj_Defteri_Yok";
            //string extension2 = ".pdf";
            //if (p.UploadFile.FileName!=null)
            //{
            //    string fileName3 = Path.GetFileNameWithoutExtension(p.UploadFile.FileName);
            //    string extension3 = Path.GetExtension(p.UploadFile.FileName);
            //    fileName3 = fileName3 + extension3;
            //    p.FilepathStajDefteri = "~/StajDefterleri/" + fileName3;
            //    fileName3 = Path.Combine(Server.MapPath("~/StajDefterleri/"), fileName3);
            //    p.UploadFile.SaveAs(fileName3);
            //    ım.AddInternBusiness(p);
            //}
            //fileName2 = fileName2 + extension2;
            //p.FilepathStajDefteri = "~/StajDefterleri/" + fileName2;
            //fileName2 = Path.Combine(Server.MapPath("~/StajDefterleri/"), fileName2);
            //p.UploadFile.SaveAs(fileName2);
            //ım.AddInternBusiness(p);
            if (Request.Files.Count > 0)
            {
                if (Request.Files[1].FileName == "")
                {
                    string dosyaadi2 = "Staj_Defteri_Yok";
                    string uzanti2 = ".pdf";
                    string yol2 = "~/StajDefterleri2/" + dosyaadi2 + uzanti2;
                    Request.Files[1].SaveAs(Server.MapPath(yol2));
                    p.StajDefteri = "/StajDefterleri2/" + dosyaadi2 + uzanti2;
                }
                else
                {
                    string dosyaadi2 = Path.GetFileNameWithoutExtension(Request.Files[1].FileName);
                    string uzanti2 = Path.GetExtension(Request.Files[1].FileName);
                    string yol2 = "~/StajDefterleri2/" + dosyaadi2 + uzanti2;
                    Request.Files[1].SaveAs(Server.MapPath(yol2));
                    p.StajDefteri = "/StajDefterleri2/" + dosyaadi2 + uzanti2;
                }
                string dosyaadi = Path.GetFileNameWithoutExtension(Request.Files[0].FileName);
                string uzanti = Path.GetExtension(Request.Files[0].FileName);
                string yol = "~/StajBelgeleri2/" + dosyaadi + uzanti;
                Request.Files[0].SaveAs(Server.MapPath(yol));
                p.StajBelgesi = "/StajBelgeleri2/" + dosyaadi + uzanti;
            }
            ım.AddInternBusiness(p);
            return RedirectToAction("StudentPage");
        }
      
        [HttpGet]
        public ActionResult addNewDate()
        {
            return View();
        }
        [HttpPost]
        public ActionResult addNewDate(Intern p)
        {
            var tarih = p.StartDate;
            var staj= HelperClass3.AddBusinessDays(p.StartDate, 30)
                .ToString("dd MMMM yyyy");
            var İme = HelperClass3.AddBusinessDays(p.StartDate, 70)
                .ToString("dd MMMM yyyy");
            ViewBag.staj = staj;
            ViewBag.İme = İme;
            return View();
        }
        [HttpGet]
        public ActionResult ChangePassword()
        {
            return View();
        }
        [HttpPost]
        public ActionResult ChangePassword(Student p)
        {
            return View();
        }


    }
}

namespace InternInformation.Controllers
{
    [Authorize]
    public class TeacherController : Controller
    {
        HelperClass helper = new HelperClass();
        StudentProfileManager spm = new StudentProfileManager();
        TeacherManager tm = new TeacherManager();
        //öğretmenleri getırıp sayfaya yazan actıon
        public ActionResult Index()
        {
            var Teachers = tm.GetAll();
            return View(Teachers);
        }
        //öğretmenleri guncellemek ıcın gereken actıon 
        [HttpGet]
        public ActionResult TeacherUpdate(int id)
        {
            Teacher teacher = tm.FindTeacher(id);
            return View(teacher);
        }
        [HttpPost]
        public ActionResult TeacherUpdate(Teacher p)
        {
            tm.UpdateTeacher(p);
            return RedirectToAction("Index");
        }
        //yenı ogretmen ekleme
        [HttpGet]
        public ActionResult AddNewTeacher()
        {
            return View();
        }
        [HttpPost]
        public ActionResult AddNewTeacher(Teacher p)
        {
            //yardımcı classdan bır nesne urettık
            HelperClass helper = new HelperClass();
            //eklenecek ogretmen ıcın rastgele bır sıfre olusturduk
            var password = helper.generatePassword();
            //ogretmen mailini bir degiskene aldık
            string TchrMail = p.TeacherMail;
            //ogretmen maılını ve sıfresını ona maıl atmak ıcın 
            //helper classdakı maıl gonder butonuna yolluyoruz
            helper.SendMailPassword(TchrMail, password);
            //şifreyi helper classındakı metotla md5 yaptık
            var encryptedPass = helper.encrypt(password);
            //sıfreyı verıtabanına yolladık
            p.TeacherPassword = encryptedPass;

            tm.AddTeacherBusiness(p);
            return RedirectToAction("Index");
        }
        //ogretmeni pasif yapar
        public ActionResult TeacherFalse(int id)
        {
            tm.TeacherStatusFalse(id);
            return RedirectToAction("Index");
        }
        //ogretmeni aktıf yapar
        public ActionResult TeacherTrue(int id)
        {
            tm.TeacherStatusTrue(id);
            return RedirectToAction("Index");
        }
        //ogretmenı komısyon yapar
        public ActionResult Commision(int id)
        {
            tm.TeacherCommision(id);
            return RedirectToAction("Index");
        }
        //komısyonu ogretmen yapar
        public ActionResult Teacher(int id)
        {
            tm.TeacherTeacher(id);
            return RedirectToAction("Index");
        }
        //sadece komısyon sayfası
        public ActionResult CommisionPage()
        {
            var commision = tm.GetAllCommision();
            return View(commision);
        }
        //sadece ogretmenler sayfası
        public ActionResult Teacherpage()
        {
            var teacher = tm.GetAllTeachers();
            return View(teacher);
        }
        //TEACHER TEMPLATEINI KULLANAN ACTIONLAR
        //ogretmen profılını getırır
        [HttpGet]
        public ActionResult TeacherHomePage()
        {
            var p = (string)Session["TeacherMail"];

            var TeacherProfile = spm.GetTeacherByMail(p);

            var Password = TeacherProfile[0].TeacherPassword;

            var DecryptedPassword = helper.decrypt(Password);

            TeacherProfile[0].TeacherPassword = DecryptedPassword;

            return View(TeacherProfile);
        }
        [HttpPost]
        public ActionResult TeacherHomePage(Teacher teacher)
        {
            var p = (string)Session["TeacherMail"];

            var TeacherProfile = spm.GetTeacherByMail(p);

            teacher.TeacherID = TeacherProfile[0].TeacherID;

            var newPassword = teacher.TeacherPassword;

            var EncryptedPassword = helper.encrypt(newPassword);

            teacher.TeacherPassword = EncryptedPassword;


            tm.UpdateTeacher(teacher);

            return RedirectToAction("TeacherHomePage");
        }
        //ogretmene atanan öğrencileri getirir
        public ActionResult MyStudents()
        {
            var p = (string)Session["TeacherMail"];
            var TeacherProfile = spm.GetTeacherByMail(p);
            ViewBag.TeacherName = TeacherProfile[0].TeacherName + " " + TeacherProfile[0].TeacherSurname;
            var students = spm.GetStudentsByTeacher(TeacherProfile[0].TeacherID);
            return View(students);
        }
        //ogrencılerın staj detaylarına giden sayfa
        public ActionResult InternDetailsTeacher(int id)
        {
            var interns = spm.GetInternByStudentID(id);
            ViewBag.studentName = interns[0].Student.StudentName + " " + interns[0].Student.StudentSurname;
            return View(interns);
        }

    }
}

namespace InternInformation.Helper
{
    public class HelperClass
    {
        //rastgele password olusturur
        public string generatePassword()
        {
            Random rnd = new Random();
            int password1 = rnd.Next(100, 1000);
            int password2 = rnd.Next(100, 1000);
            string WholePassword = password1.ToString() + password2.ToString();
            return WholePassword;

        }
        //Mail atma olayı
        public void SendMailPassword(string mail, string sifre)
        {

            MailMessage eposta = new MailMessage();
            eposta.From = new MailAddress("KOUSTAJ2022@outlook.com");
            eposta.To.Add(mail);
            eposta.Subject = "KOU Staj Sistemi şifreniz";
            eposta.Body = "KOU Staj Sistemine Kaydoldunuz şifreniz: " + sifre;

            SmtpClient smtp = new SmtpClient();
            smtp.Credentials = new System.Net.NetworkCredential("KOUSTAJ2022@outlook.com", "Yazlab2022.");
            smtp.Host = "smtp.outlook.com";
            smtp.EnableSsl = true;
            smtp.Port = 587;

            smtp.Send(eposta);
            Console.WriteLine("gonderıldı");
        }
        string hash = "";
        //şifreler
        public string encrypt(string value)
        {
            byte[] data = Encoding.Default.GetBytes(value);
            using (MD5CryptoServiceProvider md5 = new MD5CryptoServiceProvider())
            {
                byte[] keys = md5.ComputeHash(Encoding.Default.GetBytes(hash));
                using (TripleDESCryptoServiceProvider tripleDES = new TripleDESCryptoServiceProvider() { Key = keys, Mode = CipherMode.ECB, Padding = PaddingMode.PKCS7 })
                {
                    ICryptoTransform transform = tripleDES.CreateEncryptor();
                    byte[] results = transform.TransformFinalBlock(data, 0, data.Length);
                    return Convert.ToBase64String(results, 0, results.Length);
                }
            }
        }
        //şifre çözer
        public string decrypt(string value)
        {
            byte[] data = Convert.FromBase64String(value);
            using (MD5CryptoServiceProvider md5 = new MD5CryptoServiceProvider())
            {
                byte[] keys = md5.ComputeHash(Encoding.Default.GetBytes(hash));
                using (TripleDESCryptoServiceProvider tripleDES = new TripleDESCryptoServiceProvider() { Key = keys, Mode = CipherMode.ECB, Padding = PaddingMode.PKCS7 })
                {
                    ICryptoTransform transform = tripleDES.CreateDecryptor();
                    byte[] results = transform.TransformFinalBlock(data, 0, data.Length);
                    return Encoding.Default.GetString(results);
                }
            }
        }
        //iş Günü Hesaplama
        public static double GetBusinessDays(DateTime startD, DateTime endD)
        {
            double calcBusinessDays =
                1 + ((endD - startD).TotalDays * 5 -
                (startD.DayOfWeek - endD.DayOfWeek) * 2) / 7;

            if (endD.DayOfWeek == DayOfWeek.Saturday) calcBusinessDays--;
            if (startD.DayOfWeek == DayOfWeek.Sunday) calcBusinessDays--;

            return calcBusinessDays;
        }
       
    }
}

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>KOU Staj | Yardım</title>
    <link
      rel="icon"
      href="https://www.freelogovectors.net/wp-content/uploads/2020/02/kocaeli-universitesi-logo.png"
    />
    <link href="style.css" rel="stylesheet" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi"
      crossorigin="anonymous"
    />
  </head>
  <body>
    <nav class="navbar navbar-expand-lg bg-white">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">
          <img
            src="https://www.freelogovectors.net/wp-content/uploads/2020/02/kocaeli-universitesi-logo.png"
            alt="Logo"
            width="35"
            height="35"
            class="d-inline-block align-text-top"
          />
          Kocaeli Üniversitesi
        </a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav mx-auto mb-2 mb-lg-0">
            <li class="nav-item">
              <a
                class="nav-link"
                aria-current="page"
                href="http://bilisim.kocaeli.edu.tr/duyurular.php"
                >Duyurular</a
              >
            </li>
            <li class="nav-item">
              <a
                class="nav-link"
                href="http://bilisim.kocaeli.edu.tr/index.php#"
                >Sık Sorulan Sorular</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="https://www.kocaeli.edu.tr/tanitim/"
                >Aday Öğrenci</a
              >
            </li>
            <li class="nav-item">
              <a
                class="nav-link"
                href="http://bilisim.kocaeli.edu.tr/akademik-kadro.php"
                >Akademik Personel</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="http://kutuphane.kocaeli.edu.tr/"
                >Kütüphane</a
              >
            </li>
          </ul>
        </div>
      </div>
    </nav>
    <div class="container text-center">
      <div class="row rowA">
        <div class="col col-3">
          <img
            src="https://www.freelogovectors.net/wp-content/uploads/2020/02/kocaeli-universitesi-logo.png"
            width="150"
            height="150"
            alt=""
          />
        </div>
        <div class="col col-9">
          <h1 class="text-center">
            Bilişim Sistemleri Mühendisliği Staj Sistemi Yardım Sayfası
          </h1>
        </div>
      </div>
      <div class="row rowB">
        <div class="col">
          <h2 class="mb-4">İşyeri Eğitimi</h2>
          <p>
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae
            reiciendis molestias obcaecati, labore aliquid, optio molestiae
            dolorum, nam architecto ut explicabo fugit unde minus mollitia
            recusandae voluptate? Officiis, voluptatibus perferendis? Accusamus
            doloremque temporibus maiores illo neque eius consequatur,
            laudantium et repellendus quos, aut doloribus voluptates amet
            repellat officia mollitia vel numquam nemo eveniet velit recusandae!
            Magnam recusandae, quisquam necessitatibus voluptatem natus fugit ab
            explicabo debitis, laudantium neque eveniet! Mollitia vitae autem
            deserunt. Necessitatibus mollitia, consequatur itaque, earum ipsam
            consectetur deleniti illo maiores ullam praesentium illum modi
            aspernatur! Minima, numquam accusantium. Esse distinctio saepe natus
            aperiam magnam omnis ipsam inventore nisi?
          </p>
          <a href="CvTunahanYıldız.pdf" class="btn btn-success m-1" download
            >Staj Akış Diyagramı</a
          >
          <a href="CvTunahanYıldız.pdf" class="btn btn-success" download
            >Staj Başvuru Formu</a
          >
          <a href="CvTunahanYıldız.pdf" class="btn btn-success" download
            >Staj Değerlendirme Formu</a
          >
          <a href="CvTunahanYıldız.pdf" class="btn btn-success" download
            >Staj Raporu</a
          >
        </div>
        <div class="col">
          <h2 class="mb-4">Staj-2</h2>
          <p>
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae
            reiciendis molestias obcaecati, labore aliquid, optio molestiae
            dolorum, nam architecto ut explicabo fugit unde minus mollitia
            recusandae voluptate? Officiis, voluptatibus perferendis? Accusamus
            doloremque temporibus maiores illo neque eius consequatur,
            laudantium et repellendus quos, aut doloribus voluptates amet
            repellat officia mollitia vel numquam nemo eveniet velit recusandae!
            Magnam recusandae, quisquam necessitatibus voluptatem natus fugit ab
            explicabo debitis, laudantium neque eveniet! Mollitia vitae autem
            deserunt. Necessitatibus mollitia, consequatur itaque, earum ipsam
            consectetur deleniti illo maiores ullam praesentium illum modi
            aspernatur! Minima, numquam accusantium. Esse distinctio saepe natus
            aperiam magnam omnis ipsam inventore nisi?
          </p>
          <a href="CvTunahanYıldız.pdf" class="btn btn-success m-1" download
            >Staj Akış Diyagramı</a
          >
          <a href="CvTunahanYıldız.pdf" class="btn btn-success" download
            >Staj Başvuru Formu</a
          >
          <a href="CvTunahanYıldız.pdf" class="btn btn-success" download
            >Staj Değerlendirme Formu</a
          >
          <a href="CvTunahanYıldız.pdf" class="btn btn-success" download
            >Staj Raporu</a
          >
        </div>
        <div class="col">
          <h2 class="mb-4">Staj-1</h2>
          <p>
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae
            reiciendis molestias obcaecati, labore aliquid, optio molestiae
            dolorum, nam architecto ut explicabo fugit unde minus mollitia
            recusandae voluptate? Officiis, voluptatibus perferendis? Accusamus
            doloremque temporibus maiores illo neque eius consequatur,
            laudantium et repellendus quos, aut doloribus voluptates amet
            repellat officia mollitia vel numquam nemo eveniet velit recusandae!
            Magnam recusandae, quisquam necessitatibus voluptatem natus fugit ab
            explicabo debitis, laudantium neque eveniet! Mollitia vitae autem
            deserunt. Necessitatibus mollitia, consequatur itaque, earum ipsam
            consectetur deleniti illo maiores ullam praesentium illum modi
            aspernatur! Minima, numquam accusantium. Esse distinctio saepe natus
            aperiam magnam omnis ipsam inventore nisi?
          </p>
          <a href="CvTunahanYıldız.pdf" class="btn btn-success m-1" download
            >Staj Akış Diyagramı</a
          >
          <a href="CvTunahanYıldız.pdf" class="btn btn-success" download
            >Staj Başvuru Formu</a
          >
          <a href="CvTunahanYıldız.pdf" class="btn btn-success" download
            >Staj Değerlendirme Formu</a
          >
          <a href="CvTunahanYıldız.pdf" class="btn btn-success" download
            >Staj Raporu</a
          >
        </div>
      </div>
    </div>
    <div class="container-fluid bg-black mt-5">
      <div class="row pt-5">
        <div class="col text-center">
          <h1 class="lead text-white">Tanıtım</h1>
          <a
           target="_blank"
            href="https://www.kocaeli.edu.tr/tanitim-filmi.php"
            class="btn btn-sm btn-outline-light"
            download
            >Tanıtım Filmi/a
          >
          <a
            href="https://www.kocaeli.edu.tr/tanitim/"
            class="btn btn-sm btn-outline-light m-2"
            download
            >Tanıtım</a
          >
          <a
            href="https://www.kocaeli.edu.tr/tanitim/galeri.php"
            class="btn btn-sm btn-outline-light"
            download
            >Görsellerle KOU</a
          >
          <a
            href="http://sanaltur.kocaeli.edu.tr/"
            class="btn btn-sm btn-outline-light"
            download
            >Sanal Tur</a
          >
        </div>
        <div class="col text-center">
          <h1 class="lead text-white">iletişim/Adress</h1>
          <p class="text-white">
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur
            vel asperiores unde omnis, expedita inventore error ad distinctio.
            Molestiae odio dolorum cumque rem, eligendi unde assumenda voluptas!
            Dolor, quaerat ad!
          </p>
        </div>
        <div class="col text-center">
          <h1 class="lead text-white text-center">Bağlantılar</h1>
          <a href="http://kutuphane.kocaeli.edu.tr/"
            ><span class="badge text-bg-primary m-2">Kütüphane</span></a
          >
          <br />
          <a href="http://bilisim.kocaeli.edu.tr/akademik-kadro.php">
            <span class="badge text-bg-info m-2">Akademik Personel</span></a
          >
          <br />
          <a href="https://www.kocaeli.edu.tr/tanitim/">
            <span class="badge text-bg-danger m-2">Aday Öğrenci</span></a
          >
          <br />
          <a href="http://bilisim.kocaeli.edu.tr/index.php#"
            ><span class="badge text-bg-warning m-2"
              >Sık Sorulan Sorular</span
            ></a
          >
          <br />
          <a href="http://bilisim.kocaeli.edu.tr/duyurular.php">
            <span class="badge text-bg-light m-2">Duyurular</span></a
          >
        </div>
      </div>
    </div>
    <div class="container-fluid text-center bg-black text-white">
      © 2017 Kocaeli Üniversitesi. Bütün hakları saklıdır
    </div>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
.rowA{
    /* background-color: yellow; */
    padding-top: 5%;
}
.rowB{
    /* background-color: blueviolet; */
    padding-top: 5%;
}
.rowD{
    background-color: black;
   
}
@model EntityLayer.Concrete.Help

@{
    ViewBag.Title = "AddHelp";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container-fluid col-10 mt-3">
    <h1 class="lead font-weight-normal">Yeni Yardım Metni Ekleme</h1>
    <br />
    <form method="post" class="form-group ">
        @Html.Label("İlk Başlık")
        @Html.TextBoxFor(x => x.HelpTitle, new { @class = "form-control" })
        <br />
        @Html.Label("İkinci Başlık")
        @Html.TextBoxFor(x => x.HelpTitle2, new { @class = "form-control" })
        <br />
        @Html.Label("Logo Link")
        @Html.TextBoxFor(x => x.HelpLogo, new { @class = "form-control" })
        <br />
        @Html.Label("Yardım İçeriği 1")
        @Html.TextBoxFor(x => x.HelpContent1, new { @class = "form-control" })
        <br />
        @Html.Label("Yardım İçeriği 2")
        @Html.TextBoxFor(x => x.HelpContent2, new { @class = "form-control" })
        <br />
        @Html.Label("Yardım İçeriği 3")
        @Html.TextBoxFor(x => x.HelpContent3, new { @class = "form-control" })
        <br />
        <button class="btn btn-primary">Ekle</button>
    </form>
</div>
@model IEnumerable<EntityLayer.Concrete.Help>

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>KOU Staj | Yardım</title>
    <link rel="icon"
          href="https://www.freelogovectors.net/wp-content/uploads/2020/02/kocaeli-universitesi-logo.png" />
    <link href="~/HelpPages/style.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi"
          crossorigin="anonymous" />
</head>
<body>
    <nav class="navbar navbar-expand-lg bg-white">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">
                <img src="https://www.freelogovectors.net/wp-content/uploads/2020/02/kocaeli-universitesi-logo.png"
                     alt="Logo"
                     width="35"
                     height="35"
                     class="d-inline-block align-text-top" />
                Kocaeli Üniversitesi
            </a>
            <button class="navbar-toggler"
                    type="button"
                    data-bs-toggle="collapse"
                    data-bs-target="#navbarSupportedContent"
                    aria-controls="navbarSupportedContent"
                    aria-expanded="false"
                    aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mx-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link"
                           aria-current="page"
                           href="http://bilisim.kocaeli.edu.tr/duyurular.php">Duyurular</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link"
                           href="http://bilisim.kocaeli.edu.tr/index.php#">Sık Sorulan Sorular</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="https://www.kocaeli.edu.tr/tanitim/">Aday Öğrenci</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link"
                           href="http://bilisim.kocaeli.edu.tr/akademik-kadro.php">Akademik Personel</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="http://kutuphane.kocaeli.edu.tr/">Kütüphane</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container text-center">
        <div class="row rowA">
            <div class="col col-3">
                <img src="https://www.freelogovectors.net/wp-content/uploads/2020/02/kocaeli-universitesi-logo.png"
                     width="150"
                     height="150"
                     alt="" />
            </div>
            <div class="col col-9">
                <h1 class="text-center">
                    Bilişim Sistemleri Mühendisliği Staj Sistemi Yardım Sayfası
                </h1>
            </div>
        </div>
        <div class="row rowB">
            @foreach (var item in Model)
            {
                <div class="col">
                    <h2 class="mb-4">@item.HelpTitle</h2>

                    <p>
                        @item.HelpContent1
                    </p>


                    @* staj akıs *@<a href="@item.HelpTitle2" target="_blank" class="btn btn-success m-1" download>Staj Akış Diyagramı</a>
                    @* staj basvurukabul *@    <a href="@item.HelpContent2" target="_blank" class="btn btn-success" download>Staj Başvuru Formu</a>
                    @* staj degerlendırme *@   <a href="@item.HelpContent3" target="_blank" class="btn btn-success" download>Staj Değerlendirme Formu</a>
                    @* staj raporu *@  <a href="@item.HelpLogo" target="_blank" class="btn btn-success" download>Staj Raporu</a>
                </div>
            }

        </div>
    </div>
    <div class="container-fluid bg-black mt-5">
        <div class="row pt-5">
            <div class="col text-center">
                <h1 class="lead text-white">Tanıtım</h1>
                <a target="_blank"
                   href="https://www.kocaeli.edu.tr/tanitim-filmi.php"
                   class="btn btn-sm btn-outline-light"
                   download>
                    Tanıtım Filmi
                </a>
                <a href="https://www.kocaeli.edu.tr/tanitim/"
                   class="btn btn-sm btn-outline-light m-2"
                   download>Tanıtım</a>
                <a href="https://www.kocaeli.edu.tr/tanitim/galeri.php"
                   class="btn btn-sm btn-outline-light"
                   download>Görsellerle KOU</a>
                <a href="http://sanaltur.kocaeli.edu.tr/"
                   class="btn btn-sm btn-outline-light"
                   download>Sanal Tur</a>
            </div>
            <div class="col text-center">
                <h1 class="lead text-white">iletişim/Adress</h1>
                <p class="text-white">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur
                    vel asperiores unde omnis, expedita inventore error ad distinctio.
                    Molestiae odio dolorum cumque rem, eligendi unde assumenda voluptas!
                    Dolor, quaerat ad!
                </p>
            </div>
            <div class="col text-center">
                <h1 class="lead text-white text-center">Bağlantılar</h1>
                <a href="http://kutuphane.kocaeli.edu.tr/"><span class="badge text-bg-primary m-2">Kütüphane</span></a>
                <br />
                <a href="http://bilisim.kocaeli.edu.tr/akademik-kadro.php">
                    <span class="badge text-bg-info m-2">Akademik Personel</span>
                </a>
                <br />
                <a href="https://www.kocaeli.edu.tr/tanitim/">
                    <span class="badge text-bg-danger m-2">Aday Öğrenci</span>
                </a>
                <br />
                <a href="http://bilisim.kocaeli.edu.tr/index.php#">
                    <span class="badge text-bg-warning m-2">Sık Sorulan Sorular</span>
                </a>
                <br />
                <a href="http://bilisim.kocaeli.edu.tr/duyurular.php">
                    <span class="badge text-bg-light m-2">Duyurular</span>
                </a>
            </div>
        </div>
    </div>
    <div class="container-fluid text-center bg-black text-white">
        © 2017 Kocaeli Üniversitesi. Bütün hakları saklıdır
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
            crossorigin="anonymous"></script>
</body>
</html>
@model IEnumerable<EntityLayer.Concrete.Help>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container-fluid col-12 mt-3">
    <div>
        <h2>
            Yardım İçeriği Tablosu
        </h2>
        <a class="btn btn-success btn-sm" href="/Help/AddHelp/">
           Yardım İçeriği Ekle
        </a>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Help ID</th>
                    <th scope="col">Help Title</th>
                    <th scope="col">Help Title2</th>
                    <th scope="col">Help Logo</th>
                    <th scope="col">Help Content 1</th>
                    <th scope="col">Help Content 2</th>
                    <th scope="col">Help Content 3</th>
                    <th scope="col">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.HelpID
                        </td>
                        <td>
                            @item.HelpTitle
                        </td>
                        <td>
                            @item.HelpTitle2
                        </td>
                        <td>
                            @item.HelpLogo
                        </td>
                        <td>
                            @item.HelpContent1
                        </td>
                        <td>
                            @item.HelpContent2
                        </td>
                        <td>
                            @item.HelpContent3
                        </td>
                        <td class="project-actions text-center">
                            <a class="btn btn-warning btn-sm" href="/Help/UpdateHelp/@item.HelpID">
                                Düzenle
                            </a>

                            <a class="btn btn-danger btn-sm" href="/Help/DeleteHelp/@item.HelpID">
                                Sil
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@model EntityLayer.Concrete.Help

@{
    ViewBag.Title = "UpdateHelp";
    Layout = "~/Views/Shared/Layout.cshtml";
}



@using (Html.BeginForm("UpdateHelp", "Help", FormMethod.Post))
{
    <br />
    <div class="container-fluid col-8">

        <h2 class="label">Yardım Kısmı Güncelleme Sayfası</h2>

        <form class="form-group" method="post">
            @Html.HiddenFor(x => x.HelpID)
            @Html.Label("Başlık 1")
            @Html.TextBoxFor(x => x.HelpTitle, new { @class = "form-control" })
            <br />
            @Html.Label("Başlık 2")
            @Html.TextBoxFor(x => x.HelpTitle2, new { @class = "form-control" })
            <br />
            @Html.Label("Logo")
            @Html.TextBoxFor(x => x.HelpLogo, new { @class = "form-control" })
            <br />
            @Html.Label("İçerik 1")
            @Html.TextBoxFor(x => x.HelpContent1, new { @class = "form-control" })
            <br />
            @Html.Label("İçerik 2")
            @Html.TextBoxFor(x => x.HelpContent2, new { @class = "form-control" })
            <br />
            @Html.Label("İçerik 3")
            @Html.TextBoxFor(x => x.HelpContent3, new { @class = "form-control" })
            <br />
            <button class="btn btn-warning">Güncelle</button>
        </form>
    </div>
}
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>
@{
    ViewBag.Title = "Contact";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<address>
    One Microsoft Way<br />
    Redmond, WA 98052-6399<br />
    <abbr title="Phone">P:</abbr>
    425.555.0100
</address>

<address>
    <strong>Support:</strong>   <a href="mailto:Support@example.com">Support@example.com</a><br />
    <strong>Marketing:</strong> <a href="mailto:Marketing@example.com">Marketing@example.com</a>
</address>
@{
    ViewBag.Title = "About";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<p>Use this area to provide additional information.</p>
@model EntityLayer.Concrete.Intern
@{
    ViewBag.Title = "AddNewIntern";
    Layout = "~/Views/Shared/Layout.cshtml";
}
<div class="container-fluid col-10 mt-3">
    <h1 class="lead font-weight-normal">Staj Ekle</h1>
    <br />
    @using (Html.BeginForm("AddNewIntern", "Intern", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.Label("Firma İsmi")
        @Html.TextBoxFor(x => x.CompanyName, new { @class = "form-control" })
        <br />
        @Html.Label("Firmadaki Sorumlusu")
        @Html.TextBoxFor(x => x.CompanyResponsible, new { @class = "form-control" })
        <br />
        @Html.Label("Firmadaki Sorumlunun Numarası")
        @Html.TextBoxFor(x => x.CompanyResponsibleNumber, new { @class = "form-control" })
        <br />
        @Html.Label("Başlangıç tarihi")
        @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control", @id = "startDate" })
        <br />
        @Html.Label("Bitiş Tarihi")
        @Html.TextBoxFor(x => x.FinishDate, new { @class = "form-control", @id = "finishDate" })
        <br />
        @Html.Label("Staj Belgesi")
        <input type="file" name="StajBelgesi"/>
        <br />
        @Html.Label("Staj Tipi")
        @Html.DropDownListFor(x => x.InternNameID, (List<SelectListItem>)ViewBag.InternTypes, new { @class = "form-control" })
        <br />
        @* Default 3 Eklenir *@
        @*@Html.Label("Staj İlerleme Durumu")
            @Html.DropDownListFor(x => x.InternStatusID, (List<SelectListItem>)ViewBag.InternStatus, new { @class = "form-control" })
            <br />*@
        @Html.Label("Öğrencinin Adı")
        @Html.DropDownListFor(x => x.StudentID, (List<SelectListItem>)ViewBag.Students, new { @class = "form-control" })
        <br />
        <button class="btn btn-primary" id="">Ekle</button>
    }
    <button onclick="func1()" class="btn btn-primary" id="tus">HEsapla</button>
</div>
<script type="text/javascript">





</script>
@model IEnumerable<EntityLayer.Concrete.Intern>
@{
    ViewBag.Title = "Completed";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container-fluid col-10 mt-3">
    <div>
        <h2>
            Tamamlanan Staj Tablosu
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Staj ID</th>
                    <th scope="col">Öğrenci Adı</th>
                    <th scope="col">Firma Adı</th>
                    <th scope="col">Firmadaki Sorumlusu</th>
                    <th scope="col">Firmadaki Sorumlu Numara</th>
                    <th scope="col">Başlangıç Tarihi</th>
                    <th scope="col">Bitiş Tarihi</th>
                    <th scope="col">Staj Tipi</th>
                    <th scope="col">Staj İlerleme Durumu</th>
                    <th scope="col" class="text-center" style="min-width: 300px;">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.InternID
                        </td>
                        <td>
                            @item.Student.StudentName
                            @item.Student.StudentSurname
                        </td>
                        <td>
                            @item.CompanyName
                        </td>
                        <td>
                            @item.CompanyResponsible
                        </td>
                        <td>
                            @item.CompanyResponsibleNumber
                        </td>
                        <td>
                            @item.StartDate.ToShortDateString()
                        </td>
                        <td>
                            @item.FinishDate.ToShortDateString()
                        </td>
                        <td>
                            @item.InternName.InternNamee
                        </td>
                        <td>
                            @item.InternStatus.InternStatusName
                        </td>
                        <td class="project-actions text-center">
                            <a class="btn btn-warning btn-sm" href="/Intern/confirmWaiting/@item.InternID">
                                Kaldır
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@model IEnumerable<EntityLayer.Concrete.Intern>
@{
    ViewBag.Title = "Confirmed";
    Layout = "~/Views/Shared/Layout.cshtml";
}



<div class="container-fluid col-10 mt-3">
    <div>
        <h2>
            Onaylanan Staj Tablosu
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Staj ID</th>
                    <th scope="col">Öğrenci Adı</th>
                    <th scope="col">Firma Adı</th>
                    <th scope="col">Firmadaki Sorumlusu</th>
                    <th scope="col">Firmadaki Sorumlu Numara</th>
                    <th scope="col">Başlangıç Tarihi</th>
                    <th scope="col">Bitiş Tarihi</th>
                    <th scope="col">Staj Tipi</th>
                    <th scope="col">Staj İlerleme Durumu</th>
                    <th scope="col" class="text-center" style="min-width: 300px;">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.InternID
                        </td>
                        <td>
                            @item.Student.StudentName
                            @item.Student.StudentSurname
                        </td>
                        <td>
                            @item.CompanyName
                        </td>
                        <td>
                            @item.CompanyResponsible
                        </td>
                        <td>
                            @item.CompanyResponsibleNumber
                        </td>
                        <td>
                            @item.StartDate.ToShortDateString()
                        </td>
                        <td>
                            @item.FinishDate.ToShortDateString()
                        </td>
                        <td>
                            @item.InternName.InternNamee
                        </td>
                        <td>
                            @item.InternStatus.InternStatusName
                        </td>
                        <td class="project-actions text-center">
                            <a class="btn btn-warning btn-sm" href="/Intern/confirmWaiting/@item.InternID">
                                Kaldır
                            </a>
                            <a class="btn btn-primary btn-sm" href="/Intern/Complete/@item.InternID">
                                Stajı Tamamla
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@model IEnumerable<EntityLayer.Concrete.Intern>

@{
    ViewBag.Title = "cRequired";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container-fluid col-10 mt-3">
    <div>
        <h2>
            Staj Tablosu
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Staj ID</th>
                    <th scope="col">Öğrenci Adı</th>
                    <th scope="col">Firma Adı</th>
                    <th scope="col">Firmadaki Sorumlusu</th>
                    <th scope="col">Firmadaki Sorumlu Numara</th>
                    <th scope="col">Başlangıç Tarihi</th>
                    <th scope="col">Bitiş Tarihi</th>
                    <th scope="col">Staj Tipi</th>
                    <th scope="col">Staj İlerleme Durumu</th>
                    <th scope="col" class="text-center" style="min-width: 300px;">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.InternID
                        </td>
                        <td>
                            @item.Student.StudentName
                            @item.Student.StudentSurname
                        </td>
                        <td>
                            @item.CompanyName
                        </td>
                        <td>
                            @item.CompanyResponsible
                        </td>
                        <td>
                            @item.CompanyResponsibleNumber
                        </td>
                        <td>
                            @item.StartDate.ToShortDateString()
                        </td>
                        <td>
                            @item.FinishDate.ToShortDateString()
                        </td>
                        <td>
                            @item.InternName.InternNamee
                        </td>
                        <td>
                            @item.InternStatus.InternStatusName
                        </td>
                        <td class="project-actions text-center">
                            <a class="btn btn-success btn-sm" href="/Intern/Confirm/@item.InternID">
                                Onayla
                            </a>
                            <a class="btn btn-danger btn-sm" href="/Intern/Unconfirm/@item.InternID">
                                Onaylama
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
      
    </div>
</div>
@*@model IEnumerable<EntityLayer.Concrete.Intern>*@

@model PagedList.IPagedList<EntityLayer.Concrete.Intern>
@using PagedList
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container-fluid col-12 mt-3">
    <div>
        <h2>
            Staj Tablosu
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Staj ID</th>
                    <th scope="col">Öğrenci Adı</th>
                    <th scope="col">Firma Adı</th>
                    <th scope="col">Firmadaki Sorumlusu</th>
                    <th scope="col">Firmadaki Sorumlu Numara</th>
                    <th scope="col">Başlangıç Tarihi</th>
                    <th scope="col">Bitiş Tarihi</th>
                    <th scope="col">Staj Tipi</th>
                    <th scope="col">Staj İlerleme Durumu</th>
                    <th scope="col">Staj Başvuru Belgesi</th>
                    <th scope="col">Staj Defteri</th>
                    <th scope="col" class="text-center" style="min-width: 300px;">İşlemler</th>
                    <th scope="col">Staj Durumu</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.InternID
                        </td>
                        <td>
                            @item.Student.StudentName
                            @item.Student.StudentSurname
                        </td>
                        <td>
                            @item.CompanyName
                        </td>
                        <td>
                            @item.CompanyResponsible
                        </td>
                        <td>
                            @item.CompanyResponsibleNumber
                        </td>
                        <td>
                            @item.StartDate.ToShortDateString()
                        </td>
                        <td>
                            @item.FinishDate.ToShortDateString()
                        </td>
                        <td>
                            @item.InternName.InternNamee
                        </td>
                        <td>
                            @item.InternStatus.InternStatusName
                        </td>
                        <td class="text-center">
                            Staj Belgesi <br /><br />
                            <a class="btn btn-dark btn-sm text-white" href=" @item.StajBelgesi">Detaylı Gör</a>
                        </td>
                        <td class="text-center">
                            Staj Defteri <br /><br />
                            <a class="btn btn-dark btn-sm text-white" href=" @item.StajDefteri">Detaylı Gör</a>
                        </td>

                        <td class="project-actions text-center">
                            <a class="btn btn-warning btn-sm" href="/Intern/InternUpdate/@item.InternID">
                                Düzenle
                            </a>
                            <a class="btn btn-danger btn-sm" href="/Student/StudentFalse/@item.StudentID">
                                Pasif Yap
                            </a>
                            <a class="btn btn-success btn-sm" href="/Student/StudentTrue/@item.StudentID">
                                Aktif Yap
                            </a>
                        </td>
                        <td>
                            @item.InternStatuss
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @Html.PagedListPager((IPagedList)Model, sayfa => Url.Action("Index", new { sayfa }), new PagedListRenderOptions
        {
            LiElementClasses = new List<string> { "page-link" }
        })
    </div>
</div>
@model EntityLayer.Concrete.Intern
@{
    ViewBag.Title = "InternUpdate";
    Layout = "~/Views/Shared/Layout.cshtml";
}

@using (Html.BeginForm("InternUpdate", "Intern", FormMethod.Post))
{
    <br />
    <div class="container-fluid col-8">

        <h2 class="label">Staj Güncelleme Sayfası</h2>

        <form class="form-group" method="post">
            @Html.HiddenFor(x => x.InternID)
            <br />
            @*@Html.Label("Öğrenci Adı")
        @Html.TextBoxFor(x => x.Student.StudentName, new { @class = "form-control" })
        <br />
        @Html.Label("Öğrenci Soyadı")
        @Html.TextBoxFor(x => x.Student.StudentSurname, new { @class = "form-control" })
        <br />*@
            @Html.Label("Öğrencinin Adı")
            @Html.DropDownListFor(x => x.StudentID, (List<SelectListItem>)ViewBag.Students, new { @class = "form-control" })
            <br />
            @Html.Label("Firma ismi")
            @Html.TextBoxFor(x => x.CompanyName, new { @class = "form-control" })
            <br />
            @Html.Label("Firma sorumlusu ismi")
            @Html.TextBoxFor(x => x.CompanyResponsible, new { @class = "form-control" })
            <br />
            @Html.Label("Firma sorumlusu numarası")
            @Html.TextBoxFor(x => x.CompanyResponsibleNumber, new { @class = "form-control" })
            <br />
            @Html.Label("Başlangıç Tarihi")
            @Html.TextBoxFor(x => x.StartDate, "{0:dd-MM-yyyy}", new { @class = "form-control" })
            <br />
            @Html.Label("Bitiş Tarihi")
            @Html.TextBoxFor(x => x.FinishDate, "{0:dd-MM-yyyy}", new { @class = "form-control" })
            <br />
            @Html.Label("Staj Tipi")
            @Html.DropDownListFor(x => x.InternNameID, (List<SelectListItem>)ViewBag.InternTypes, new { @class = "form-control" })
            <br />
            @Html.Label("Staj İlerleme Durumu")
            @Html.DropDownListFor(x => x.InternStatusID, (List<SelectListItem>)ViewBag.InternStatus, new { @class = "form-control" })
            <br />
            <button class="btn btn-warning">Güncelle</button>
        </form>
    </div>
}


@{
    ViewBag.Title = "UnConfirmed";
    Layout = "~/Views/Shared/Layout.cshtml";
}


<div class="container-fluid col-10 mt-3">
    <div>
        <h2>
           Onaylanmayan Staj Tablosu
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Staj ID</th>
                    <th scope="col">Öğrenci Adı</th>
                    <th scope="col">Firma Adı</th>
                    <th scope="col">Firmadaki Sorumlusu</th>
                    <th scope="col">Firmadaki Sorumlu Numara</th>
                    <th scope="col">Başlangıç Tarihi</th>
                    <th scope="col">Bitiş Tarihi</th>
                    <th scope="col">Staj Tipi</th>
                    <th scope="col">Staj İlerleme Durumu</th>
                    <th scope="col" class="text-center" style="min-width: 300px;">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.InternID
                        </td>
                        <td>
                            @item.Student.StudentName
                            @item.Student.StudentSurname
                        </td>
                        <td>
                            @item.CompanyName
                        </td>
                        <td>
                            @item.CompanyResponsible
                        </td>
                        <td>
                            @item.CompanyResponsibleNumber
                        </td>
                        <td>
                            @item.StartDate.ToShortDateString()
                        </td>
                        <td>
                            @item.FinishDate.ToShortDateString()
                        </td>
                        <td>
                            @item.InternName.InternNamee
                        </td>
                        <td>
                            @item.InternStatus.InternStatusName
                        </td>
                        <td class="project-actions text-center">
                            <a class="btn btn-warning btn-sm" href="/Intern/confirmWaiting/@item.InternID">
                                Kaldır
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@{
    Layout = null;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <title>KOU Öğretmen</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!--===============================================================================================-->
    <link rel="icon" type="image/png" href="/LoginAdmin-1/images/Kou_yuvarlak.png" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/bootstrap/css/bootstrap.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/fonts/font-awesome-4.7.0/css/font-awesome.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/vendor/animate/animate.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/css-hamburgers/hamburgers.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/select2/select2.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/css/util.css" />
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/css/main.css" />
    <!--===============================================================================================-->
</head>
<body>
    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">
                <div class="login100-pic js-tilt" data-tilt>
                    <img src="~/LoginAdmin-1/images/Koulogo.png" alt="IMG" />
                </div>


                @using (Html.BeginForm("TeacherLogin", "login", FormMethod.Post, new { @class = "login100-form validate-form" }))
                {
                    <span class="login100-form-title">Staj Bilgi Sistemi Öğretmen Girişi </span>

                    <div class="wrap-input100 validate-input"
                         data-validate="Valid email is required: ex@abc.xyz">
                        <input class="input100"
                               type="text"
                               name="TeacherMail"
                               placeholder="Öğretmen Mail" />
                        <span class="focus-input100"></span>
                        <span class="symbol-input100">
                            <i class="fa fa-envelope" aria-hidden="true"></i>
                        </span>
                    </div>

                    <div class="wrap-input100 validate-input"
                         data-validate="Password is required">
                        <input class="input100"
                               type="password"
                               name="TeacherPassword"
                               placeholder="Şifre" />
                        <span class="focus-input100"></span>
                        <span class="symbol-input100">
                            <i class="fa fa-lock" aria-hidden="true"></i>
                        </span>
                    </div>

                    <div class="container-login100-form-btn">
                        <button class="login100-form-btn">Giriş Yap</button>
                    </div>

                    <div class="text-center p-t-12">
                        <!-- <span class="txt1"> Forgot </span> -->
                        <a class="txt2" href="#"> Şifremi Unuttum </a>
                    </div>

                    <div class="text-center p-t-136">
                        <a class="txt2" href="/login/AdminLogin/">
                            Yönetici Girişi
                            <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                        </a><br>
                        <a class="txt2" href="/login/StudentLogin/">
                            Öğrenci Girişi
                            <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                        </a>
                    </div>
                }
            </div>
            <a class="login100-form-title text-white" href="/Help/HelpPage/">Yardım</a>
        </div>
    </div>

    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/jquery/jquery-3.2.1.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/bootstrap/js/popper.js"></script>
    <script src="/LoginAdmin-1/vendor/bootstrap/js/bootstrap.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/select2/select2.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/tilt/tilt.jquery.min.js"></script>
    <script>
        $(".js-tilt").tilt({
            scale: 1.1,
        });
    </script>
    <!--===============================================================================================-->
    <script src="~/LoginAdmin-1/js/main.js"></script>
</body>
</html>

@{
    Layout = null;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <title>KOU Öğrenci</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!--===============================================================================================-->
    <link rel="icon" type="image/png" href="/LoginAdmin-1/images/Kou_yuvarlak.png" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/bootstrap/css/bootstrap.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/fonts/font-awesome-4.7.0/css/font-awesome.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/vendor/animate/animate.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/css-hamburgers/hamburgers.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/select2/select2.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/css/util.css" />
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/css/main.css" />
    <!--===============================================================================================-->
</head>
<body>
    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">
                <div class="login100-pic js-tilt" data-tilt>
                    <img src="~/LoginAdmin-1/images/Koulogo.png" alt="IMG" />
                </div>

                @using (Html.BeginForm("StudentLogin", "login", FormMethod.Post, new { @class = "login100-form validate-form" }))
                {
                    <span class="login100-form-title">Staj Bilgi Sistemi Öğrenci Girişi </span>

                    <div class="wrap-input100 validate-input"
                         data-validate="Valid email is required: ex@abc.xyz">
                        <input class="input100"
                               type="text"
                               name="StudentMail"
                               placeholder="Öğrenci Mail" />
                        <span class="focus-input100"></span>
                        <span class="symbol-input100">
                            <i class="fa fa-envelope" aria-hidden="true"></i>
                        </span>
                    </div>

                    <div class="wrap-input100 validate-input"
                         data-validate="Password is required">
                        <input class="input100"
                               type="password"
                               name="StudentPassword"
                               placeholder="Şifre" />
                        <span class="focus-input100"></span>
                        <span class="symbol-input100">
                            <i class="fa fa-lock" aria-hidden="true"></i>
                        </span>
                    </div>

                    <div class="container-login100-form-btn">
                        <button class="login100-form-btn">Giriş Yap</button>
                    </div>

                    <div class="text-center p-t-12">
                        <!-- <span class="txt1"> Forgot </span> -->
                        @*<a class="txt2" href="#"> Şifremi Unuttum </a>*@
                    </div>

                    <div class="text-center p-t-136">
                        <a class="txt2" href="/login/AdminLogin/">
                            Yönetici Girişi
                            <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                        </a><br>
                        <a class="txt2" href="/login/TeacherLogin/">
                            Öğretmen Girişi
                            <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                        </a>
                    </div>
                }
            </div>
            <a class="login100-form-title text-white" href="/Help/HelpPage/">Yardım</a>
        </div>
    </div>

    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/jquery/jquery-3.2.1.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/bootstrap/js/popper.js"></script>
    <script src="/LoginAdmin-1/vendor/bootstrap/js/bootstrap.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/select2/select2.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/tilt/tilt.jquery.min.js"></script>
    <script>
        $(".js-tilt").tilt({
            scale: 1.1,
        });
    </script>
    <!--===============================================================================================-->
    <script src="~/LoginAdmin-1/js/main.js"></script>
</body>
</html>

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>KOU Yönetici</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!--===============================================================================================-->
    <link rel="icon" type="image/png" href="/LoginAdmin-1/images/Kou_yuvarlak.png" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/bootstrap/css/bootstrap.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/fonts/font-awesome-4.7.0/css/font-awesome.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/vendor/animate/animate.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/css-hamburgers/hamburgers.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/select2/select2.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/css/util.css" />
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/css/main.css" />
    <!--===============================================================================================-->
</head>
<body>
    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">
                <div class="login100-pic js-tilt" data-tilt>
                    <img src="~/LoginAdmin-1/images/Koulogo.png" alt="IMG" />
                </div>

                <form class="login100-form validate-form">
                    <span class="login100-form-title">Staj Bilgi Sistemi Yönetici Girişi </span>

                    <div class="wrap-input100 validate-input"
                         data-validate="Valid email is required: ex@abc.xyz">
                        <input class="input100"
                               type="text"
                               name="email"
                               placeholder="Kullanıcı" />
                        <span class="focus-input100"></span>
                        <span class="symbol-input100">
                            <i class="fa fa-envelope" aria-hidden="true"></i>
                        </span>
                    </div>

                    <div class="wrap-input100 validate-input"
                         data-validate="Password is required">
                        <input class="input100"
                               type="password"
                               name="pass"
                               placeholder="Şifre" />
                        <span class="focus-input100"></span>
                        <span class="symbol-input100">
                            <i class="fa fa-lock" aria-hidden="true"></i>
                        </span>
                    </div>

                    <div class="container-login100-form-btn">
                        <button class="login100-form-btn">Giriş Yap</button>
                    </div>

                    <div class="text-center p-t-12">
                        <!-- <span class="txt1"> Forgot </span> -->
                        <a class="txt2" href="#"> Şifremi Unuttum </a>
                    </div>

                    <div class="text-center p-t-136">
                        <a class="txt2" href="#">
                            Hesap Oluştur
                            <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/jquery/jquery-3.2.1.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/bootstrap/js/popper.js"></script>
    <script src="/LoginAdmin-1/vendor/bootstrap/js/bootstrap.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/select2/select2.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/tilt/tilt.jquery.min.js"></script>
    <script>
        $(".js-tilt").tilt({
            scale: 1.1,
        });
    </script>
    <!--===============================================================================================-->
    <script src="~/LoginAdmin-1/js/main.js"></script>
</body>
</html>

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>KOU Yönetici</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!--===============================================================================================-->
    <link rel="icon" type="image/png" href="/LoginAdmin-1/images/Kou_yuvarlak.png" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/bootstrap/css/bootstrap.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/fonts/font-awesome-4.7.0/css/font-awesome.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/vendor/animate/animate.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/css-hamburgers/hamburgers.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet"
          type="text/css"
          href="/LoginAdmin-1/vendor/select2/select2.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/css/util.css" />
    <link rel="stylesheet" type="text/css" href="/LoginAdmin-1/css/main.css" />
    <!--===============================================================================================-->
</head>
<body>
    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">
                <div class="login100-pic js-tilt" data-tilt>
                    <img src="~/LoginAdmin-1/images/Koulogo.png" alt="IMG" />
                </div>
                @using (Html.BeginForm("AdminLogin", "login", FormMethod.Post, new { @class = "login100-form validate-form" }))
                {
                    <span class="login100-form-title">Staj Bilgi Sistemi Yönetici Girişi </span>

                    <div class="wrap-input100 validate-input"
                         data-validate="Email gereklidir">
                        <input class="input100"
                               type="text"
                               name="AdminMail"
                               placeholder="Yönetici Mail" />
                        <span class="focus-input100"></span>
                        <span class="symbol-input100">
                            <i class="fa fa-envelope" aria-hidden="true"></i>
                        </span>
                    </div>

                    <div class="wrap-input100 validate-input"
                         data-validate="Şifre gereklidir">
                        <input class="input100"
                               type="password"
                               name="Password"
                               placeholder="Şifre" />
                        <span class="focus-input100"></span>
                        <span class="symbol-input100">
                            <i class="fa fa-lock" aria-hidden="true"></i>
                        </span>
                    </div>

                    <div class="container-login100-form-btn">
                        <button class="login100-form-btn">Giriş Yap</button>
                    </div>

                    @*<div class="text-center p-t-12">
                    <span class="txt1"> Yardım </span>
                    <a class="txt2" href="#"> Yardım </a>
                    <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                </div>*@

                    <div class="text-center p-t-136">
                        <a class="txt2" href="/login/TeacherLogin/">
                            Öğretmen Girişi
                            <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                        </a><br>
                        <a class="txt2" href="/login/StudentLogin/">
                            Öğrenci Girişi
                            <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                        </a>
                    </div>
                }
            </div>
            <a class="login100-form-title text-white" href="/Help/HelpPage/">Yardım</a>
        </div>
    </div>

    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/jquery/jquery-3.2.1.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/bootstrap/js/popper.js"></script>
    <script src="/LoginAdmin-1/vendor/bootstrap/js/bootstrap.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/select2/select2.min.js"></script>
    <!--===============================================================================================-->
    <script src="/LoginAdmin-1/vendor/tilt/tilt.jquery.min.js"></script>
    <script>
        $(".js-tilt").tilt({
            scale: 1.1,
        });
    </script>
    <!--===============================================================================================-->
    <script src="~/LoginAdmin-1/js/main.js"></script>
</body>
</html>

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <link rel="icon" href="~/AdminLTE-3.0.4/dist/img/Kou_yuvarlak.png">
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>KOU | Öğretmen</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/fontawesome-free/css/all.min.css" />
    <!-- Ionicons -->
    <link rel="stylesheet"
          href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" />
    <!-- Tempusdominus Bbootstrap 4 -->
    <link rel="stylesheet"
          href="~/AdminLTE-3.0.4/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css" />
    <!-- iCheck -->
    <link rel="stylesheet"
          href="~/AdminLTE-3.0.4/plugins/icheck-bootstrap/icheck-bootstrap.min.css" />
    <!-- JQVMap -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/jqvmap/jqvmap.min.css" />
    <!-- Theme style -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/dist/css/adminlte.min.css" />
    <!-- overlayScrollbars -->
    <link rel="stylesheet"
          href="~/AdminLTE-3.0.4/plugins/overlayScrollbars/css/OverlayScrollbars.min.css" />
    <!-- Daterange picker -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/daterangepicker/daterangepicker.css" />
    <!-- summernote -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/summernote/summernote-bs4.css" />
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700"
          rel="stylesheet" />
</head>
<body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">
        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button">
                        <i class="fas fa-bars"></i>
                    </a>
                </li>
                <li class="nav-item d-none d-sm-inline-block">
                    <a href="#" class="nav-link">Kocaeli Üniversitesi Bilişim Sistemleri Mühendisliği Staj Yönetim Sistemi Öğretmen Paneli</a>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <!-- Brand Logo -->
            <a href="#" class="brand-link">
                <img src="~/AdminLTE-3.0.4/dist/img/Kou_yuvarlak.png"
                     alt="AdminLTE Logo"
                     class="brand-image img-circle elevation-3"
                     style="opacity: 0.8" />
                <span class="brand-text font-weight-light">Öğretmen Paneli</span>
            </a>

            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar user panel (optional) -->
                @*<div class="user-panel mt-3 pb-3 mb-3 d-flex">
                        <div class="image">
                            <img src="~/AdminLTE-3.0.4/dist/img/user2-160x160.jpg"
                                 class="img-circle elevation-2"
                                 alt="User Image" />
                        </div>
                        <div class="info">
                            <a href="#" class="d-block">Alexander Pierce</a>
                        </div>
                    </div>*@

                <!-- Sidebar Menu -->
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column"
                        data-widget="treeview"
                        role="menu"
                        data-accordion="false">
                        <li class="nav-item ">
                            <a href="/Teacher/TeacherHomePage/" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Profil
                                </p>
                            </a>
                        </li>
                        <li class="nav-item ">
                            <a href="/Teacher/MyStudents/" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Öğrencilerim
                                </p>
                            </a>
                        </li>
                        @if (User.IsInRole("A"))
                        {
                            <li class="nav-item has-treeview">
                                <a href="#" class="nav-link">
                                    <i class="nav-icon fas fa-copy"></i>
                                    <p>
                                        Staj İşlemleri
                                        <i class="fas fa-angle-left right"></i>
                                    </p>
                                </a>
                                <ul class="nav nav-treeview">
                                    <li class="nav-item">
                                        <a href="/Intern/Index/" class="nav-link">
                                            <i class="far fa-circle nav-icon"></i>
                                            <p>Anasayfa</p>
                                        </a>
                                    </li>
                                </ul>
                                <ul class="nav nav-treeview">
                                    <li class="nav-item">
                                        <a href="/Intern/AddNewIntern/" class="nav-link">
                                            <i class="far fa-circle nav-icon"></i>
                                            <p>Staj Ekle</p>
                                        </a>
                                    </li>
                                </ul>
                                <ul class="nav nav-treeview">
                                    <li class="nav-item">
                                        <a href="/Intern/cRequired/" class="nav-link">
                                            <i class="far fa-circle nav-icon text-warning"></i>
                                            <p>Onay Bekleyen Stajlar</p>
                                        </a>
                                    </li>
                                </ul>
                                <ul class="nav nav-treeview">
                                    <li class="nav-item">
                                        <a href="/Intern/Confirmed/" class="nav-link">
                                            <i class="far fa-circle nav-icon text-success"></i>
                                            <p>Onaylanan Stajlar</p>
                                        </a>
                                    </li>
                                </ul>
                                <ul class="nav nav-treeview">
                                    <li class="nav-item">
                                        <a href="/Intern/UnConfirmed/" class="nav-link">
                                            <i class="far fa-circle nav-icon text-danger"></i>
                                            <p>Onaylanmayan Stajlar</p>
                                        </a>
                                    </li>
                                </ul>

                                <ul class="nav nav-treeview">
                                    <li class="nav-item">
                                        <a href="/Intern/Completed/" class="nav-link">
                                            <i class="far fa-circle nav-icon text-primary"></i>
                                            <p>Tamamlanan Stajlar</p>
                                        </a>
                                    </li>
                                </ul>
                                <ul class="nav nav-treeview">
                                    <li class="nav-item">
                                        <a href="/Intern/Completed/" class="nav-link">
                                            <i class="far fa-circle nav-icon text-indigo"></i>
                                            <p>Tamamlanmamış Stajlar</p>
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        }
                        <li class="nav-item ">
                            <a href="/login/LogOutTeacher/" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Çıkış Yap
                                </p>
                            </a>
                        </li>

                    </ul>
                </nav>
            </div>
        </aside>
        <div class="content-wrapper bg-light">
            <section class="content-header bg-light">

                @RenderBody()

            </section>
        </div>
        <aside class="control-sidebar control-sidebar-dark">
        </aside>

    </div>
    <!-- ./wrapper -->
    <!-- jQuery -->
    <script src="~/AdminLTE-3.0.4/plugins/jquery/jquery.min.js"></script>
    <!-- jQuery UI 1.11.4 -->
    <script src="~/AdminLTE-3.0.4/plugins/jquery-ui/jquery-ui.min.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>$.widget.bridge("uibutton", $.ui.button);</script>
    <!-- Bootstrap 4 -->
    <script src="~/AdminLTE-3.0.4/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- ChartJS -->
    <script src="~/AdminLTE-3.0.4/plugins/chart.js/Chart.min.js"></script>
    <!-- Sparkline -->
    <script src="~/AdminLTE-3.0.4/plugins/sparklines/sparkline.js"></script>
    <!-- JQVMap -->
    <script src="~/AdminLTE-3.0.4/plugins/jqvmap/jquery.vmap.min.js"></script>
    <script src="~/AdminLTE-3.0.4/plugins/jqvmap/maps/jquery.vmap.usa.js"></script>
    <!-- jQuery Knob Chart -->
    <script src="~/AdminLTE-3.0.4/plugins/jquery-knob/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="~/AdminLTE-3.0.4/plugins/moment/moment.min.js"></script>
    <script src="~/AdminLTE-3.0.4/plugins/daterangepicker/daterangepicker.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    <script src="~/AdminLTE-3.0.4/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <!-- Summernote -->
    <script src="~/AdminLTE-3.0.4/plugins/summernote/summernote-bs4.min.js"></script>
    <!-- overlayScrollbars -->
    <script src="~/AdminLTE-3.0.4/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/AdminLTE-3.0.4/dist/js/adminlte.js"></script>
    <!-- AdminLTE dashboard demo (This is only for demo purposes) -->
    <script src="~/AdminLTE-3.0.4/dist/js/pages/dashboard.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="~/AdminLTE-3.0.4/dist/js/demo.js"></script>
</body>
</html>

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <link rel="icon" href="~/AdminLTE-3.0.4/dist/img/Kou_yuvarlak.png">
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>KOU | Öğrenci</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/fontawesome-free/css/all.min.css" />
    <!-- Ionicons -->
    <link rel="stylesheet"
          href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" />
    <!-- Tempusdominus Bbootstrap 4 -->
    <link rel="stylesheet"
          href="~/AdminLTE-3.0.4/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css" />
    <!-- iCheck -->
    <link rel="stylesheet"
          href="~/AdminLTE-3.0.4/plugins/icheck-bootstrap/icheck-bootstrap.min.css" />
    <!-- JQVMap -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/jqvmap/jqvmap.min.css" />
    <!-- Theme style -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/dist/css/adminlte.min.css" />
    <!-- overlayScrollbars -->
    <link rel="stylesheet"
          href="~/AdminLTE-3.0.4/plugins/overlayScrollbars/css/OverlayScrollbars.min.css" />
    <!-- Daterange picker -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/daterangepicker/daterangepicker.css" />
    <!-- summernote -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/summernote/summernote-bs4.css" />
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700"
          rel="stylesheet" />
</head>
<body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">
        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button">
                        <i class="fas fa-bars"></i>
                    </a>
                </li>
                <li class="nav-item d-none d-sm-inline-block">
                    <a href="#" class="nav-link">Kocaeli Üniversitesi Bilişim Sistemleri Mühendisliği Staj Yönetim Sistemi Öğrenci Paneli</a>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <!-- Brand Logo -->
            <a href="#" class="brand-link">
                <img src="~/AdminLTE-3.0.4/dist/img/Kou_yuvarlak.png"
                     alt="AdminLTE Logo"
                     class="brand-image img-circle elevation-3"
                     style="opacity: 0.8" />
                <span class="brand-text font-weight-light">Öğrenci Paneli</span>
            </a>

            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar user panel (optional) -->
                @*<div class="user-panel mt-3 pb-3 mb-3 d-flex">
                    <div class="image">
                        <img src="~/AdminLTE-3.0.4/dist/img/user2-160x160.jpg"
                             class="img-circle elevation-2"
                             alt="User Image" />
                    </div>
                    <div class="info">
                        <a href="#" class="d-block">Alexander Pierce</a>
                    </div>
                </div>*@

                <!-- Sidebar Menu -->
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column"
                        data-widget="treeview"
                        role="menu"
                        data-accordion="false">
                        <li class="nav-item ">
                            <a href="/Student/StudentPage/" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Profili Düzenle
                                </p>
                            </a>
                        </li>
                        <li class="nav-item ">
                            <a href="/Student/Interns/" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Stajlarım
                                </p>
                            </a>
                        </li>
                        <li class="nav-item ">
                            <a href="/Student/apply/" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Staj Başvurusunda Bulun
                                </p>
                            </a>
                        </li>
                        <li class="nav-item ">
                            <a href="/Student/addNewDate/" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                   Staj Günü Hesaplayıcı
                                </p>
                            </a>
                        </li>
                        <li class="nav-item ">
                            <a href="/login/LogOutStudent/" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Çıkış Yap
                                </p>
                            </a>
                        </li>
                        @*<li class="nav-item has-treeview">
            <a href="#" class="nav-link">
                <i class="nav-icon fas fa-copy"></i>
                <p>
                    Öğretmen İşlemleri
                    <i class="fas fa-angle-left right"></i>
                </p>
            </a>
            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Teacher/Index/" class="nav-link">
                        <i class="far fa-circle nav-icon"></i>
                        <p>Anasayfa</p>
                    </a>
                </li>
            </ul>
            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Teacher/AddNewTeacher/" class="nav-link">
                        <i class="far fa-circle nav-icon"></i>
                        <p>Öğretmen Ekle</p>
                    </a>
                </li>
            </ul>
            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Teacher/CommisionPage/" class="nav-link">
                        <i class="far fa-circle nav-icon"></i>
                        <p>Komisyonu Gör</p>
                    </a>
                </li>
            </ul>
            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Teacher/Teacherpage/" class="nav-link">
                        <i class="far fa-circle nav-icon"></i>
                        <p>Normal Öğretmenleri Gör</p>
                    </a>
                </li>
            </ul>
        </li>
        <li class="nav-item has-treeview">
            <a href="#" class="nav-link">
                <i class="nav-icon fas fa-copy"></i>
                <p>
                    Staj İşlemleri
                    <i class="fas fa-angle-left right"></i>
                </p>
            </a>
            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Intern/Index/" class="nav-link">
                        <i class="far fa-circle nav-icon"></i>
                        <p>Anasayfa</p>
                    </a>
                </li>
            </ul>
            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Intern/AddNewIntern/" class="nav-link">
                        <i class="far fa-circle nav-icon"></i>
                        <p>Staj Ekle</p>
                    </a>
                </li>
            </ul>
            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Intern/cRequired/" class="nav-link">
                        <i class="far fa-circle nav-icon text-warning"></i>
                        <p>Onay Bekleyen Stajlar</p>
                    </a>
                </li>
            </ul>
            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Intern/Confirmed/" class="nav-link">
                        <i class="far fa-circle nav-icon text-success"></i>
                        <p>Onaylanan Stajlar</p>
                    </a>
                </li>
            </ul>
            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Intern/UnConfirmed/" class="nav-link">
                        <i class="far fa-circle nav-icon text-danger"></i>
                        <p>Onaylanmayan Stajlar</p>
                    </a>
                </li>
            </ul>

            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Intern/Completed/" class="nav-link">
                        <i class="far fa-circle nav-icon text-primary"></i>
                        <p>Tamamlanan Stajlar</p>
                    </a>
                </li>
            </ul>
            <ul class="nav nav-treeview">
                <li class="nav-item">
                    <a href="/Teacher/Teacherpage/" class="nav-link">
                        <i class="far fa-circle nav-icon text-info"></i>
                        <p>Eksik Belgeli Stajlar</p>
                    </a>
                </li>
            </ul>
        </li>*@
                    </ul>
                </nav>
            </div>
        </aside>
        <div class="content-wrapper bg-light">
            <section class="content-header bg-light">

                @RenderBody()

            </section>
        </div>
        <aside class="control-sidebar control-sidebar-dark">
        </aside>

    </div>
    <!-- ./wrapper -->
    <!-- jQuery -->
    <script src="~/AdminLTE-3.0.4/plugins/jquery/jquery.min.js"></script>
    <!-- jQuery UI 1.11.4 -->
    <script src="~/AdminLTE-3.0.4/plugins/jquery-ui/jquery-ui.min.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>$.widget.bridge("uibutton", $.ui.button);</script>
    <!-- Bootstrap 4 -->
    <script src="~/AdminLTE-3.0.4/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- ChartJS -->
    <script src="~/AdminLTE-3.0.4/plugins/chart.js/Chart.min.js"></script>
    <!-- Sparkline -->
    <script src="~/AdminLTE-3.0.4/plugins/sparklines/sparkline.js"></script>
    <!-- JQVMap -->
    <script src="~/AdminLTE-3.0.4/plugins/jqvmap/jquery.vmap.min.js"></script>
    <script src="~/AdminLTE-3.0.4/plugins/jqvmap/maps/jquery.vmap.usa.js"></script>
    <!-- jQuery Knob Chart -->
    <script src="~/AdminLTE-3.0.4/plugins/jquery-knob/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="~/AdminLTE-3.0.4/plugins/moment/moment.min.js"></script>
    <script src="~/AdminLTE-3.0.4/plugins/daterangepicker/daterangepicker.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    <script src="~/AdminLTE-3.0.4/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <!-- Summernote -->
    <script src="~/AdminLTE-3.0.4/plugins/summernote/summernote-bs4.min.js"></script>
    <!-- overlayScrollbars -->
    <script src="~/AdminLTE-3.0.4/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/AdminLTE-3.0.4/dist/js/adminlte.js"></script>
    <!-- AdminLTE dashboard demo (This is only for demo purposes) -->
    <script src="~/AdminLTE-3.0.4/dist/js/pages/dashboard.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="~/AdminLTE-3.0.4/dist/js/demo.js"></script>
</body>
</html>

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <link rel="icon" href="~/AdminLTE-3.0.4/dist/img/Kou_yuvarlak.png">
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>KOU | Admin</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/fontawesome-free/css/all.min.css" />
    <!-- Ionicons -->
    <link rel="stylesheet"
          href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" />
    <!-- Tempusdominus Bbootstrap 4 -->
    <link rel="stylesheet"
          href="~/AdminLTE-3.0.4/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css" />
    <!-- iCheck -->
    <link rel="stylesheet"
          href="~/AdminLTE-3.0.4/plugins/icheck-bootstrap/icheck-bootstrap.min.css" />
    <!-- JQVMap -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/jqvmap/jqvmap.min.css" />
    <!-- Theme style -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/dist/css/adminlte.min.css" />
    <!-- overlayScrollbars -->
    <link rel="stylesheet"
          href="~/AdminLTE-3.0.4/plugins/overlayScrollbars/css/OverlayScrollbars.min.css" />
    <!-- Daterange picker -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/daterangepicker/daterangepicker.css" />
    <!-- summernote -->
    <link rel="stylesheet" href="~/AdminLTE-3.0.4/plugins/summernote/summernote-bs4.css" />
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700"
          rel="stylesheet" />
</head>
<body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">
        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button">
                        <i class="fas fa-bars"></i>
                    </a>
                </li>
                <li class="nav-item d-none d-sm-inline-block">
                    <a href="#" class="nav-link">Kocaeli Üniversitesi Bilişim Sistemleri Mühendisliği Staj Yönetim Sistemi yönetici paneli</a>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <!-- Brand Logo -->
            <a href="#" class="brand-link">
                <img src="~/AdminLTE-3.0.4/dist/img/Kou_yuvarlak.png"
                     alt="AdminLTE Logo"
                     class="brand-image img-circle elevation-3"
                     style="opacity: 0.8" />
                <span class="brand-text font-weight-light">Yönetici Paneli</span>
            </a>

            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar user panel (optional) -->
                <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                    <div class="image">
                        <img src="~/AdminLTE-3.0.4/dist/img/user2-160x160.jpg"
                             class="img-circle elevation-2"
                             alt="User Image" />
                    </div>
                    <div class="info">
                        <a href="#" class="d-block">Alexander Pierce</a>
                    </div>
                </div>

                <!-- Sidebar Menu -->
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column"
                        data-widget="treeview"
                        role="menu"
                        data-accordion="false">
                        <li class="nav-item has-treeview">
                            <a href="#" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Öğrenci İşlemleri
                                    <i class="fas fa-angle-left right"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Student/Index/" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Anasayfa</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Student/AddNewStudent/" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Öğrenci Ekle</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="#" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Çoklu Öğrenci Ekle</p>
                                    </a>
                                </li>
                            </ul>
                        </li>
                        <li class="nav-item has-treeview">
                            <a href="#" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Öğretmen İşlemleri
                                    <i class="fas fa-angle-left right"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Teacher/Index/" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Anasayfa</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Teacher/AddNewTeacher/" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Öğretmen Ekle</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Teacher/CommisionPage/" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Komisyonu Gör</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Teacher/Teacherpage/" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Normal Öğretmenleri Gör</p>
                                    </a>
                                </li>
                            </ul>
                        </li>
                        <li class="nav-item has-treeview">
                            <a href="#" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Staj İşlemleri
                                    <i class="fas fa-angle-left right"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Intern/Index/" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Anasayfa</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Intern/AddNewIntern/" class="nav-link">
                                        <i class="far fa-circle nav-icon"></i>
                                        <p>Staj Ekle</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Intern/cRequired/" class="nav-link">
                                        <i class="far fa-circle nav-icon text-warning"></i>
                                        <p>Onay Bekleyen Stajlar</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Intern/Confirmed/" class="nav-link">
                                        <i class="far fa-circle nav-icon text-success"></i>
                                        <p>Onaylanan Stajlar</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Intern/UnConfirmed/" class="nav-link">
                                        <i class="far fa-circle nav-icon text-danger"></i>
                                        <p>Onaylanmayan Stajlar</p>
                                    </a>
                                </li>
                            </ul>

                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Intern/Completed/" class="nav-link">
                                        <i class="far fa-circle nav-icon text-primary"></i>
                                        <p>Tamamlanan Stajlar</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="/Intern/Completed/" class="nav-link">
                                        <i class="far fa-circle nav-icon text-indigo"></i>
                                        <p>Tamamlanmamış Stajlar</p>
                                    </a>
                                </li>
                            </ul>

                        </li>
                        <li class="nav-item">
                            <a href="/Help/Index/" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Yardım İçerikleri
                                    @*<i class="fas fa-angle-left right"></i>*@
                                </p>
                            </a>
                        </li>

                        <li class="nav-item">
                            <a href="/login/LogOutAdmin/" class="nav-link">
                                <i class="nav-icon fas fa-copy"></i>
                                <p>
                                    Çıkış Yap
                                    @*<i class="fas fa-angle-left right"></i>*@
                                </p>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </aside>
        <div class="content-wrapper bg-light">
            <section class="content-header bg-light">

                @RenderBody()

            </section>
        </div>
        <aside class="control-sidebar control-sidebar-dark">
        </aside>

    </div>
    <!-- ./wrapper -->
    <!-- jQuery -->
    <script src="~/AdminLTE-3.0.4/plugins/jquery/jquery.min.js"></script>
    <!-- jQuery UI 1.11.4 -->
    <script src="~/AdminLTE-3.0.4/plugins/jquery-ui/jquery-ui.min.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>$.widget.bridge("uibutton", $.ui.button);</script>
    <!-- Bootstrap 4 -->
    <script src="~/AdminLTE-3.0.4/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- ChartJS -->
    <script src="~/AdminLTE-3.0.4/plugins/chart.js/Chart.min.js"></script>
    <!-- Sparkline -->
    <script src="~/AdminLTE-3.0.4/plugins/sparklines/sparkline.js"></script>
    <!-- JQVMap -->
    <script src="~/AdminLTE-3.0.4/plugins/jqvmap/jquery.vmap.min.js"></script>
    <script src="~/AdminLTE-3.0.4/plugins/jqvmap/maps/jquery.vmap.usa.js"></script>
    <!-- jQuery Knob Chart -->
    <script src="~/AdminLTE-3.0.4/plugins/jquery-knob/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="~/AdminLTE-3.0.4/plugins/moment/moment.min.js"></script>
    <script src="~/AdminLTE-3.0.4/plugins/daterangepicker/daterangepicker.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    <script src="~/AdminLTE-3.0.4/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <!-- Summernote -->
    <script src="~/AdminLTE-3.0.4/plugins/summernote/summernote-bs4.min.js"></script>
    <!-- overlayScrollbars -->
    <script src="~/AdminLTE-3.0.4/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/AdminLTE-3.0.4/dist/js/adminlte.js"></script>
    <!-- AdminLTE dashboard demo (This is only for demo purposes) -->
    <script src="~/AdminLTE-3.0.4/dist/js/pages/dashboard.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="~/AdminLTE-3.0.4/dist/js/demo.js"></script>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Error</title>
</head>
<body>
    <hgroup>
        <h1>Error.</h1>
        <h2>An error occurred while processing your request.</h2>
    </hgroup>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse" title="more options">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
@model EntityLayer.Concrete.Student
@{
    ViewBag.Title = "StudentUpdate";
    Layout = "~/Views/Shared/Layout.cshtml";
}

@using (Html.BeginForm("StudentUpdate", "Student", FormMethod.Post))
{
    <br />
    <div class="container-fluid col-8">

        <h2 class="label">Öğrenci Güncelleme Sayfası</h2>

        <form class="form-group" method="post">
            @Html.HiddenFor(x => x.StudentID)
            <br />
            @Html.Label("Öğrenci Adı")
            @Html.TextBoxFor(x => x.StudentName, new { @class = "form-control" })
            <br />
            @Html.Label("Öğrenci Soyadı")
            @Html.TextBoxFor(x => x.StudentSurname, new { @class = "form-control" })
            <br />
            @Html.Label("Öğrenci Mail")
            @Html.TextBoxFor(x => x.StudentMail, new { @class = "form-control" })
            <br />
            @Html.Label("Öğrenci Okul Numarası")
            @Html.TextBoxFor(x => x.StudentNumber, new { @class = "form-control" })
            <br />
            @Html.Label("Öğrenci Cep Numarası")
            @Html.TextBoxFor(x => x.StudentPhoneNumber, new { @class = "form-control" })
            <br />
            @Html.Label("Öğrenci Sınıf")
            @Html.TextBoxFor(x => x.StudentGrade, new { @class = "form-control" })
            <br />
            @Html.Label("Atanacak Öğretmen Bilgileri")
            @*@Html.TextBoxFor(x => x.Teacher.TeacherName, new { @class = "form-control" })*@
            @Html.DropDownListFor(x => x.TeacherID, (List<SelectListItem>)ViewBag.Teachers, new { @class = "form-control" })
            <br />
            <button class="btn btn-warning">Güncelle</button>
        </form>
    </div>
}
@model IEnumerable<EntityLayer.Concrete.Student>
@{
    ViewBag.Title = "StudentPage";
    Layout = "~/Views/Shared/StudentLayout.cshtml";
}


<div class="container-fluid">
    <div class="row">
        <!-- /.col -->
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <div class="tab-pane " id="settings">
                        @using (Html.BeginForm("StudentPage", "Student", FormMethod.Post))
                        {
                            foreach (var item in Model)
                            {
                                <form class="form-horizontal ">
                                    <div class="form-group row">
                                        <label for="inputName" class="col-sm-2 col-form-label">Öğrenci ID</label>
                                        <div class="col-sm-10">
                                            <input readonly class="form-control" name="StudentID" value="@item.StudentID">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputName" class="col-sm-2 col-form-label">Öğrenci Adı</label>
                                        <div class="col-sm-10">
                                            <input readonly type="text" class="form-control" name="StudentName" value="@item.StudentName">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputEmail" class="col-sm-2 col-form-label">Öğrenci Soyadı</label>
                                        <div class="col-sm-10">
                                            <input readonly type="text" class="form-control" name="StudentSurname" value="@item.StudentSurname">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputName2" class="col-sm-2 col-form-label">Öğrenci Mail</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" name="StudentMail" value="@item.StudentMail">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputExperience" class="col-sm-2 col-form-label">Öğrenci Okul NO</label>
                                        <div class="col-sm-10">
                                            <input readonly type="text" class="form-control" name="StudentNumber" value="@item.StudentNumber">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputSkills" class="col-sm-2 col-form-label">Öğrenci Cep NO</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" name="StudentPhoneNumber" value="@item.StudentPhoneNumber">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputSkills" class="col-sm-2 col-form-label">Öğrencinin Sınıfı</label>
                                        <div class="col-sm-10">
                                            <input readonly type="text" class="form-control" name="StudentGrade" value="@item.StudentGrade">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputSkills" class="col-sm-2 col-form-label">Sorumlu Öğretmen Maili</label>
                                        <div class="col-sm-10">
                                            <input readonly type="text" class="form-control" value="@item.Teacher.TeacherMail">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputSkills" class="col-sm-2 col-form-label">Sorumlu Öğretmen</label>
                                        <div class="col-sm-10">
                                            <input readonly type="text" class="form-control" value="@item.Teacher.TeacherName @item.Teacher.TeacherSurname">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputSkills" class="col-sm-2 col-form-label">Şifre</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" name="StudentPassword" value="@item.StudentPassword">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="offset-sm-2 col-sm-10">
                                            <button type="submit" class="btn btn-warning">Güncelle</button>
                                        </div>
                                    </div>
                                </form>
                            }
                        }
                    </div>
                </div><!-- /.card-body -->
            </div>
            <!-- /.nav-tabs-custom -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</div><!-- /.container-fluid -->

@model IEnumerable<EntityLayer.Concrete.Intern>
@{
    ViewBag.Title = "Interns";
    Layout = "~/Views/Shared/StudentLayout.cshtml";
}

<div class="container-fluid col-12 mt-3">
    <div>
        <h2>
           Öğrenci Staj Tablosu
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Staj ID</th>
                    <th scope="col">Öğrenci Adı</th>
                    <th scope="col">Firma Adı</th>
                    <th scope="col">Firmadaki Sorumlusu</th>
                    <th scope="col">Firmadaki Sorumlu Numara</th>
                    <th scope="col">Başlangıç Tarihi</th>
                    <th scope="col">Bitiş Tarihi</th>
                    <th scope="col">Staj Tipi</th>
                    <th scope="col">Staj İlerleme Durumu</th>
                    <th scope="col">Staj Başvuru Belgesi</th>
                    <th scope="col" class="text-center" style="min-width: 100px;">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.InternID
                        </td>
                        <td>
                            @item.Student.StudentName
                            @item.Student.StudentSurname
                        </td>
                        <td>
                            @item.CompanyName
                        </td>
                        <td>
                            @item.CompanyResponsible
                        </td>
                        <td>
                            @item.CompanyResponsibleNumber
                        </td>
                        <td>
                            @item.StartDate.ToShortDateString()
                        </td>
                        <td>
                            @item.FinishDate.ToShortDateString()
                        </td>
                        <td>
                            @item.InternName.InternNamee
                        </td>
                        <td>
                            @item.InternStatus.InternStatusName
                        </td>
                        @*<td class="text-center">
                            @item.Title <br /><br />
                            <a class="btn btn-dark btn-sm" href="@Url.Content(@item.Filepath)">Detaylı Gör</a>
                        </td>*@
                        <td class="project-actions text-center">
                            <a class="btn btn-warning btn-sm" href="/Student/InternUpdateStudent/">
                                Düzenle
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@*@model IEnumerable<EntityLayer.Concrete.Student>*@
@model PagedList.IPagedList<EntityLayer.Concrete.Student>
@using PagedList
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container-fluid col-12 mt-3">
    <div>
        <h2>
            Öğrenciler Tablosu
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Öğrenci ID</th>
                    <th scope="col">Öğrenci İsmi</th>
                    <th scope="col">Öğrenci Soyisim</th>
                    <th scope="col">Öğrenci Mail</th>
                    <th scope="col">Öğrenci Numara</th>
                    <th scope="col">Öğrenci Telefon Numarası</th>
                    <th scope="col">Öğrenci Sınıf</th>
                    <th scope="col">Öğrencilik Durumu</th>
                    <th scope="col">Sorumlu Öğretmen</th>
                    <th scope="col" class="text-center" style="min-width: 300px;">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.StudentID
                        </td>
                        <td>
                            @item.StudentName
                        </td>
                        <td>
                            @item.StudentSurname
                        </td>
                        <td>
                            @item.StudentMail
                        </td>
                        <td>
                            @item.StudentNumber
                        </td>
                        <td>
                            @item.StudentPhoneNumber
                        </td>
                        <td>
                            @item.StudentGrade
                        </td>
                        <td>
                            @item.StudentStatus
                        </td>
                        <td>
                            @item.Teacher.TeacherName
                            @item.Teacher.TeacherSurname
                        </td>
                        <td class="project-actions text-center">
                            <a class="btn btn-warning btn-sm" href="/Student/StudentUpdate/@item.StudentID">
                                Düzenle
                            </a>
                            <a class="btn btn-danger btn-sm" href="/Student/StudentFalse/@item.StudentID">
                                Pasif Yap
                            </a>
                            <a class="btn btn-success btn-sm" href="/Student/StudentTrue/@item.StudentID">
                                Aktif Yap
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @Html.PagedListPager((IPagedList)Model, sayfa => Url.Action("Index", new { sayfa }), new PagedListRenderOptions
   {
       LiElementClasses = new List<string> { "page-link" }
   })
    </div>
</div>
@model EntityLayer.Concrete.Intern
@{ string StudentName = ViewBag.isim;}
@{ string StudentSurname = ViewBag.soyisim;}
@{ int StudentID = ViewBag.ID;}
@{ string Belge = ViewBag.stajMetni;}
@{ string Defter = ViewBag.stajDefteri;}

@{
    ViewBag.Title = "apply";
    Layout = "~/Views/Shared/StudentLayout.cshtml";

}
<div class="container-fluid col-10 mt-3">
    <h1 class="lead font-weight-normal">Staja Başvur</h1>
    <br />
    @Html.Label("Öğrenci İsim")
    @Html.TextBoxFor(x => x.StudentID, new { @class = "form-control", @Value = StudentName, @readonly = true })
    <br />
    @Html.Label("Öğrenci Soyisim")
    @Html.TextBoxFor(x => x.StudentID, new { @class = "form-control", @Value = StudentSurname, @readonly = true })
    <br />

    @using (Html.BeginForm("apply", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.Label("ÖğrenciID")
        @Html.TextBoxFor(x => x.StudentID, new { @class = "form-control", @Value = StudentID, @readonly = true })
        <br />
        @Html.Label("Firma İsmi")
        @Html.TextBoxFor(x => x.CompanyName, new { @class = "form-control" })
        <br />
        @Html.Label("Firmadaki Sorumlusu")
        @Html.TextBoxFor(x => x.CompanyResponsible, new { @class = "form-control" })
        <br />
        @Html.Label("Firmadaki Sorumlunun Numarası")
        @Html.TextBoxFor(x => x.CompanyResponsibleNumber, new { @class = "form-control" })
        <br />
        @Html.Label("Başlangıç tarihi")
        @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control" })
        <br />
        @Html.Label("Bitiş Tarihi")
        @Html.TextBoxFor(x => x.FinishDate, new { @class = "form-control" })
        <br />
        @Html.Label("Staj Belgesi")
        <input type="file" name="StajBelgesi" />
        <br />
        @Html.Label("Staj Defteri")
        <input type="file" name="StajDefteri" />
        <br />
        @Html.Label("Staj Tipi")
        @Html.DropDownListFor(x => x.InternNameID, (List<SelectListItem>)ViewBag.InternTypes, new { @class = "form-control" })
        <br />
        <button class="btn btn-primary">Başvur</button>
    }
</div>
@model EntityLayer.Concrete.Student

@{
    ViewBag.Title = "AddNewStudent";
    Layout = "~/Views/Shared/Layout.cshtml";
}
<div class="container-fluid col-10 mt-3">
    <h1 class="lead font-weight-normal">Öğrenci Ekle</h1>
    <br />
    <form method="post" class="form-group ">
        @Html.Label("Öğrenci Adı")
        @Html.TextBoxFor(x => x.StudentName, new { @class = "form-control" })
        <br />
        @Html.Label("Öğrenci Soyadı")
        @Html.TextBoxFor(x => x.StudentSurname, new { @class = "form-control" })
        <br />
        @Html.Label("Öğrenci Mail")
        @Html.TextBoxFor(x => x.StudentMail, new { @class = "form-control" })
        <br />
        @Html.Label("Öğrenci Okul Numarası")
        @Html.TextBoxFor(x => x.StudentNumber, new { @class = "form-control" })
        <br />
        @Html.Label("Öğrenci Cep Numarası")
        @Html.TextBoxFor(x => x.StudentPhoneNumber, new { @class = "form-control" })
        <br />
        @Html.Label("Öğrenci Sınıf")
        @Html.TextBoxFor(x => x.StudentGrade, new { @class = "form-control" })
        <br />
        @Html.Label("Atanacak Öğretmen Bilgileri")
        @*@Html.TextBoxFor(x => x.Teacher.TeacherName, new { @class = "form-control" })*@
        @Html.DropDownListFor(x => x.TeacherID, (List<SelectListItem>)ViewBag.Teachers, new { @class = "form-control" })
        <br />
        <button class="btn btn-primary">Ekle</button>
    </form>
</div>
@model EntityLayer.Concrete.Intern
@{
    ViewBag.Title = "addNewDate";
    Layout = "~/Views/Shared/StudentLayout.cshtml";
}

<div class="container-fluid col-10 mt-3">
    <h1 class="lead font-weight-normal">Tarih giriniz</h1>
    <br />
    @using (Html.BeginForm("addNewDate", "Student", FormMethod.Post))
    {
        @Html.Label("başlangıç Tarihini giriniz")
        @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control" })
        <br />
        <button class="btn btn-primary" id="">Hesapla</button>
    }
    <br />
    @Html.Label("Staj Bitiş ")
    @Html.TextBoxFor(x => x.StudentID, new { @class = "form-control", @Value = @ViewBag.staj, @readonly = true })
    <br />
    @Html.Label("İme Bitiş")
    @Html.TextBoxFor(x => x.StudentID, new { @class = "form-control", @Value = @ViewBag.İme, @readonly = true })
    <br />
    @{ DateTime StartDate = DateTime.Now;}
    <h1 class="lead font-weight-normal">Staja bugün başlarsanız</h1>
    <br />
    <div class="c-unit-02">
        Staj 1: <span> @StartDate.ToString("dd MMMM") -@InternInformation.Helper.HelperClass3.AddBusinessDays(StartDate, 30).ToString("dd MMMM")</span>
    </div>
    <div class="c-unit-02">
        Staj 2: <span> @StartDate.ToString("dd MMMM") -@InternInformation.Helper.HelperClass3.AddBusinessDays(StartDate, 30).ToString("dd MMMM")</span>
    </div>
    <div class="c-unit-02">
        İME: <span> @StartDate.ToString("dd MMMM") -@InternInformation.Helper.HelperClass3.AddBusinessDays(StartDate, 70).ToString("dd MMMM")</span>
    </div>
    <br />
</div>
@model EntityLayer.Concrete.Teacher
@{
    ViewBag.Title = "TeacherUpdate";
    Layout = "~/Views/Shared/Layout.cshtml";
}

@using (Html.BeginForm("TeacherUpdate", "Teacher", FormMethod.Post))
{
    <br />
    <div class="container-fluid col-8">

        <h2 class="label">Öğretmen Güncelleme Sayfası</h2>

        <form class="form-group" method="post">
            @Html.HiddenFor(x => x.TeacherID)
            <br />
            @Html.Label("Öğretmen Adı")
            @Html.TextBoxFor(x => x.TeacherName, new { @class = "form-control" })
            <br />
            @Html.Label("Öğretmen Soyisim")
            @Html.TextBoxFor(x => x.TeacherSurname, new { @class = "form-control" })
            <br />
            @Html.Label("Öğretmen Mail")
            @Html.TextBoxFor(x => x.TeacherMail, new { @class = "form-control" })
            <br />
            <button class="btn btn-warning">Güncelle</button>
        </form>
    </div>
}
@model IEnumerable<EntityLayer.Concrete.Teacher>
@{
    ViewBag.Title = "Teacherpage";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container-fluid col-8 mt-3">
    <div>
        <h2>
            Öğretmenler Tablosu
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Öğretmen ID</th>
                    <th scope="col">Öğretmen İsmi</th>
                    <th scope="col">Öğretmen Soyisim</th>
                    <th scope="col">Komisyon mu ?</th>
                    <th scope="col" class="text-center">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.TeacherID
                        </td>
                        <td>
                            @item.TeacherName
                        </td>
                        <td>
                            @item.TeacherSurname
                        </td>
                        <td>
                            @item.Commission
                        </td>

                        <td class="project-actions text-center">
                            <a class="btn btn-dark btn-sm" href="/Teacher/Commision/@item.TeacherID">
                                Komisyon Yap
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@model IEnumerable<EntityLayer.Concrete.Teacher>
@{
    ViewBag.Title = "TeacherHomePage";
    Layout = "~/Views/Shared/TeacherLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <!-- /.col -->
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <div class="tab-pane " id="settings">
                        @using (Html.BeginForm("TeacherHomePage", "Teacher", FormMethod.Post))
                        {
                            foreach (var item in Model)
                            {
                                <form class="form-horizontal ">
                                    <div class="form-group row">
                                        <label for="inputName" class="col-sm-2 col-form-label">Öğretmen ID</label>
                                        <div class="col-sm-10">
                                            <input readonly class="form-control" name="StudentID" value="@item.TeacherID">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputName" class="col-sm-2 col-form-label">Öğretmen Adı</label>
                                        <div class="col-sm-10">
                                            <input readonly type="text" class="form-control" name="TeacherName" value="@item.TeacherName">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputEmail" class="col-sm-2 col-form-label">Öğretmen Soyadı</label>
                                        <div class="col-sm-10">
                                            <input readonly type="text" class="form-control" name="TeacherSurname" value="@item.TeacherSurname">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputName2" class="col-sm-2 col-form-label">Öğretmen Mail</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" name="TeacherMail" value="@item.TeacherMail">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputName2" class="col-sm-2 col-form-label">Öğretmen Şifre</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" name="TeacherPassword" value="@item.TeacherPassword">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputExperience" class="col-sm-2 col-form-label">Komisyon yetkisi var mı ?</label>
                                        <div class="col-sm-10">
                                            <input readonly type="text" class="form-control" name="Commission" value="@item.Commission.ToString()">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="offset-sm-2 col-sm-10">
                                            <button type="submit" class="btn btn-warning">Güncelle</button>
                                        </div>
                                    </div>

                                </form>
                            }
                        }
                    </div>
                </div><!-- /.card-body -->
            </div>
            <!-- /.nav-tabs-custom -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</div><!-- /.container-fluid -->
@model IEnumerable<EntityLayer.Concrete.Student>
@{
    ViewBag.Title = "MyStudents";
    Layout = "~/Views/Shared/TeacherLayout.cshtml";
}

<div class="container-fluid col-12 mt-3">
    <div>
        <h2>
            @ViewBag.TeacherName öğretmenine atanan öğrenciler
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Öğrenci ID</th>
                    <th scope="col">Öğrenci İsmi</th>
                    <th scope="col">Öğrenci Soyisim</th>
                    <th scope="col">Öğrenci Mail</th>
                    <th scope="col">Öğrenci Numara</th>
                    <th scope="col">Öğrenci Telefon Numarası</th>
                    <th scope="col">Öğrenci Sınıf</th>
                    <th scope="col">Öğrencilik Durumu</th>
                    <th scope="col" class="text-center" style="min-width: 300px;">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.StudentID
                        </td>
                        <td>
                            @item.StudentName
                        </td>
                        <td>
                            @item.StudentSurname
                        </td>
                        <td>
                            @item.StudentMail
                        </td>
                        <td>
                            @item.StudentNumber
                        </td>
                        <td>
                            @item.StudentPhoneNumber
                        </td>
                        <td>
                            @item.StudentGrade
                        </td>
                        <td>
                            @item.StudentStatus
                        </td>
                        <td class="project-actions text-center">
                            <a class="btn btn-danger btn-sm" href="/Teacher/InternDetailsTeacher/@item.StudentID">
                               Staj Detaylarını Gör
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@model IEnumerable<EntityLayer.Concrete.Intern>

@{
    ViewBag.Title = "InternDetailsTeacher";
    Layout = "~/Views/Shared/TeacherLayout.cshtml";
}

<div class="container-fluid col-10 mt-3">
    <div>
        <h2>
            @ViewBag.studentName Öğrencisine ait detaylar
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Staj ID</th>
                    <th scope="col">Öğrenci Adı</th>
                    <th scope="col">Firma Adı</th>
                    <th scope="col">Firmadaki Sorumlusu</th>
                    <th scope="col">Firmadaki Sorumlu Numara</th>
                    <th scope="col">Başlangıç Tarihi</th>
                    <th scope="col">Bitiş Tarihi</th>
                    <th scope="col">Staj Tipi</th>
                    <th scope="col">Staj İlerleme Durumu</th>
                    <th scope="col" class="text-center" style="min-width: 300px;">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.InternID
                        </td>
                        <td>
                            @item.Student.StudentName
                            @item.Student.StudentSurname
                        </td>
                        <td>
                            @item.CompanyName
                        </td>
                        <td>
                            @item.CompanyResponsible
                        </td>
                        <td>
                            @item.CompanyResponsibleNumber
                        </td>
                        <td>
                            @item.StartDate.ToShortDateString()
                        </td>
                        <td>
                            @item.FinishDate.ToShortDateString()
                        </td>
                        <td>
                            @item.InternName.InternNamee
                        </td>
                        <td>
                            @item.InternStatus.InternStatusName
                        </td>
                        <td class="project-actions text-center">
                            <a class="btn btn-warning btn-sm" href="/Intern/confirmWaiting/@item.InternID">
                                Kaldır
                            </a>
                            <a class="btn btn-primary btn-sm" href="/Intern/Complete/@item.InternID">
                                Stajı Tamamla
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@model IEnumerable<EntityLayer.Concrete.Teacher>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container-fluid col-12 mt-3">
    <div>
        <h2>
            Öğretmen Tablosu
        </h2>
        <table class="table table-hover table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th scope="col">Öğretmen ID</th>
                    <th scope="col">Öğretmen İsmi</th>
                    <th scope="col">Öğretmen Soyisim</th>
                    <th scope="col">Komisyon mu ?</th>
                    <th scope="col">Öğretmen Durumu</th>
                    <th scope="col">Öğretmen Mail</th>
                    <th scope="col" class="text-center" style="min-width: 300px;">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.TeacherID
                        </td>
                        <td>
                            @item.TeacherName
                        </td>
                        <td>
                            @item.TeacherSurname
                        </td>
                        <td>
                            @item.Commission
                        </td>
                        <td>
                            @item.TeacherStatus
                        </td>
                        <td>
                            @item.TeacherMail
                        </td>
                        <td class="project-actions text-center">
                            <a class="btn btn-warning btn-sm" href="/Teacher/TeacherUpdate/@item.TeacherID">
                                Düzenle
                            </a>
                            <a class="btn btn-danger btn-sm" href="/Teacher/TeacherFalse/@item.TeacherID">
                                Pasif Yap
                            </a>
                            <a class="btn btn-success btn-sm" href="/Teacher/TeacherTrue/@item.TeacherID">
                                Aktif Yap
                            </a>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@model IEnumerable<EntityLayer.Concrete.Teacher>

    @{
        ViewBag.Title = "CommisionPage";
        Layout = "~/Views/Shared/Layout.cshtml";
    }


    <div class="container-fluid col-8 mt-3">
        <div>
            <h2>
                Komisyon Tablosu
            </h2>
            <table class="table table-hover table-striped table-bordered mt-3">
                <thead>
                    <tr>
                        <th scope="col">Öğretmen ID</th>
                        <th scope="col">Öğretmen İsmi</th>
                        <th scope="col">Öğretmen Soyisim</th>
                        <th scope="col">Komisyon mu ?</th>
                        <th scope="col" class="text-center">İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @item.TeacherID
                            </td>
                            <td>
                                @item.TeacherName
                            </td>
                            <td>
                                @item.TeacherSurname
                            </td>
                            <td>
                                @item.Commission
                            </td>
                           
                            <td class="project-actions text-center">
                                <a class="btn btn-info btn-sm" href="/Teacher/Teacher/@item.TeacherID">
                                    Öğretmen Yap
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
@model EntityLayer.Concrete.Teacher
@{
    ViewBag.Title = "AddNewTeacher";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container-fluid col-10 mt-3">
    <h1 class="lead font-weight-normal">Öğrenci Ekle</h1>
    <br />
    <form method="post" class="form-group ">
        @Html.Label("Öğretmen Adı")
        @Html.TextBoxFor(x => x.TeacherName, new { @class = "form-control" })
        <br />
        @Html.Label("Öğretmen Soyadı")
        @Html.TextBoxFor(x => x.TeacherSurname, new { @class = "form-control" })
        <br />
        @Html.Label("Öğretmen Mail")
        @Html.TextBoxFor(x => x.TeacherMail, new { @class = "form-control" })
        <br />
        @Html.Label("Öğretmenler komisyon yetkisi olmadan eklenir.")
        <button class="btn btn-primary">Ekle</button>
    </form>
</div>

namespace BusinessLayer.Concrete
{
    public class TeacherManager
    {
        Repository<Teacher> repoTchr = new Repository<Teacher>();
        //bütün öğretmenleri getiren metot
        public List<Teacher> GetAll()
        {
            return repoTchr.List();
        }
        //komısyonu getıren metot
        public List<Teacher> GetAllCommision()
        {
            return repoTchr.List()
                .Where(x => x.Commission == true)
                .ToList(); ;
        }
        //ogretmenı getıren metot
        public List<Teacher> GetAllTeachers()
        {
            return repoTchr.List()
                .Where(x => x.Commission == false)
                .ToList(); ;
        }
        //öğretman idsine göre bulan metot
        public Teacher FindTeacher(int id)
        {
            //var deneme =repoTchr.GetById(id);
            return repoTchr.Find(x => x.TeacherID == id);
        }
        //Öğretmeni pasif yapan metot
        public int TeacherStatusFalse(int id)
        {
            Teacher teacher = repoTchr.Find(x => x.TeacherID == id);
            teacher.TeacherStatus = false;
            return repoTchr.Update(teacher);
        }
        //Öğretmeni aktif yapan metot
        public int TeacherStatusTrue(int id)
        {
            Teacher teacher = repoTchr.Find(x => x.TeacherID == id);
            teacher.TeacherStatus = true;
            return repoTchr.Update(teacher);
        }
        //Öğretmeni komisyon yapan metot
        public int TeacherCommision(int id)
        {
            Teacher teacher = repoTchr.Find(x => x.TeacherID == id);
            teacher.Commission = true;
            teacher.TeacherRole = "A";
            return repoTchr.Update(teacher);
        }
        //Öğretmeni öğretmen yapan metot
        public int TeacherTeacher(int id)
        {
            Teacher teacher = repoTchr.Find(x => x.TeacherID == id);
            teacher.Commission = false;
            teacher.TeacherRole = "B";
            return repoTchr.Update(teacher);
        }
        //Öğretmeni güncelleyen metot
        public int UpdateTeacher(Teacher p)
        {
            Teacher teacher = new Teacher();
            teacher = repoTchr.Find(x => x.TeacherID == p.TeacherID);
            teacher.TeacherID = p.TeacherID;
            teacher.TeacherPassword = p.TeacherPassword;
            teacher.TeacherName = p.TeacherName;
            teacher.TeacherSurname = p.TeacherSurname;
            teacher.Commission = p.Commission;
            teacher.TeacherStatus = p.TeacherStatus;
            return repoTchr.Update(teacher);
        }
        //Öğretmeni ekleyen metot
        public int AddTeacherBusiness(Teacher p)
        {
            p.TeacherRole = "B";
            if (p.TeacherName == "" ||
                p.TeacherSurname == "")
            {
                return -1;
            }
            return repoTchr.Insert(p);
        }
    }
}

namespace BusinessLayer.Concrete
{
    public class StudentProfileManager
    {
        Repository<Student> repoStudent = new Repository<Student>();
        Repository<Teacher> repoTeacher = new Repository<Teacher>();
        Repository<Intern> repoIntern = new Repository<Intern>();
        //maıle gore ogrencıyı yolluyor maılı atıyoruz ogrencı gelıyor
        public List<Student> GetStudentByMail(string p)
        {
            return repoStudent
                .List()
                .Where(x => x.StudentMail == p)
                .ToList();
        }
        //ogrencı numarasını yolladık bıze ona aıt stajlar verdı
        public List<Intern> GetInternByStudentID(int id)
        {
            return repoIntern.List()
                .Where(x => x.StudentID == id)
                .ToList();
        }
        //maıle gore ogretmenı yolluyor maılı atıyoruz ögretmen gelıyor
        public List<Teacher> GetTeacherByMail(string p)
        {
            return repoTeacher
                .List()
                .Where(x => x.TeacherMail == p)
                .ToList();
        }
        public List<Student> GetStudentsByTeacher(int p)
        {
            return repoStudent
                .List()
                .Where(x => x.TeacherID == p)
                .ToList();
        }
    }
}

namespace BusinessLayer.Concrete
{
    public class StudentManager
    {
        Repository<Student> repoStudent = new Repository<Student>();
        //bütün öğrenciler getiren metot
        public List<Student> GetAll()
        {
            return repoStudent.List();
        }
        //öğrenciyi idsine göre bulan metot
        public Student FindStudent(int id)
        {
            return repoStudent.Find(x => x.StudentID == id);
        }
        //öğrenciyi pasif yapan metot
        public int StudentStatusFalse(int id)
        {
            Student student = repoStudent.Find(x => x.StudentID == id);
            student.StudentStatus = false;
            return repoStudent.Update(student);
        }
        //öğrenciyi aktif yapan metot
        public int StudentStatusTrue(int id)
        {
            Student student = repoStudent.Find(x => x.StudentID == id);
            student.StudentStatus = true;
            return repoStudent.Update(student);
        }
        //öğrenciyi güncelleyen metot
        public int UpdateStudent(Student p)
        {
            Student student = new Student();
            student = repoStudent.Find(x => x.StudentID == p.StudentID);
            student.StudentName = p.StudentName;
            student.StudentSurname = p.StudentSurname;
            student.StudentMail = p.StudentMail;
            student.StudentNumber = p.StudentNumber;
            student.StudentPhoneNumber = p.StudentPhoneNumber;
            student.StudentGrade = p.StudentGrade;
            student.TeacherID = p.TeacherID;
            student.StudentPassword= p.StudentPassword;
            return repoStudent.Update(student);
        }
        //öğrenciyi ekleyen metot
        public int AddStudentBusiness(Student p)
        {
            if (p.StudentName == "" || 
                p.StudentSurname == "" || 
                p.StudentNumber.Length!=9 ||
                p.StudentPhoneNumber.Length != 10 ||
                p.StudentGrade.Length!=1)
            {
                return -1;
            }
            return repoStudent.Insert(p);
        }
    }
}


namespace BusinessLayer.Concrete
{
    public class InternManager
    {

        Helper2 helper2 = new Helper2();
        Repository<Intern> repoIntern = new Repository<Intern>();
        //bütün stajları Getiren metot
        public List<Intern> GetAll()
        {
            return repoIntern.List();
        }
        //Onay bekleyen stajları Getiren metot
        public List<Intern> confirmRequiredBL()
        {
            return repoIntern.List()
                .Where(x => x.InternStatusID == 3)
                .ToList();
        }
        //Tamamlanan stajları Getiren metot
        public List<Intern> CompletedBl()
        {
            return repoIntern.List()
                .Where(x => x.InternStatusID == 1)
                .ToList();
        }
        //Onaylanan stajları Getiren metot
        public List<Intern> confirmedBl()
        {
            return repoIntern.List()
                .Where(x => x.InternStatusID == 8)
                .ToList();
        }
        //Onaylanmayan stajları Getiren metot
        public List<Intern> UnconfirmedBl()
        {
            return repoIntern.List()
                .Where(x => x.InternStatusID == 4)
                .ToList();
        }
        //staj bulur
        public Intern Findintern(int id)
        {
            return repoIntern.Find(x => x.InternID == id);
        }
        //Staj ekleyen metot
        public int AddInternBusiness(Intern p)
        {
            helper2 = new Helper2();
            //staj1 ve staj2 için bu blok kullanılır
            if (p.InternNameID == 1 || p.InternNameID == 2)
            {
                //helperdakı hesaplama fonk
                var days = helper2.GetBusinessDays(p.StartDate, p.FinishDate);
                if (days != 30.0)
                {
                    return -1;
                }
            }
            //işyeri için bu blok kullanılır
            if (p.InternNameID == 3)
            {
                //helperdakı hesaplama fonk
                var days = helper2.GetBusinessDays(p.StartDate, p.FinishDate);
                if (days != 70.0)
                {
                    return -1;
                }
            }
            if (p.CompanyName == null)
            {
                return -1;
            }
            var ogrID = p.StudentID;
            var interns=repoIntern.List().Where(x=>x.StudentID==ogrID).ToList();
            //if (interns.Count()>=3)
            //{
            //    return -1;

            //}
            //her staj default olarak onay gereklı tıpıne eklenır
            p.InternStatusID = 3;
            return repoIntern.Insert(p);
        }
        //öğrenciyi güncelleyen metot
        public int UpdateIntern(Intern p)
        {
            Intern ıntern = new Intern();
            ıntern = repoIntern.Find(x => x.InternID == p.InternID);
            ıntern.CompanyName = p.CompanyName;
            ıntern.CompanyResponsible = p.CompanyResponsible;
            ıntern.CompanyResponsibleNumber = p.CompanyResponsibleNumber;
            ıntern.StartDate = p.StartDate;
            ıntern.FinishDate = p.FinishDate;
            ıntern.InternStatusID = p.InternStatusID;
            ıntern.InternNameID = p.InternNameID;
            return repoIntern.Update(ıntern);
        }
        //Stajı onaylayan metot
        public int confirmIntern(int id)
        {
            Intern intern = repoIntern.Find(x => x.InternID == id);
            var nameSurname = intern.Student.StudentName + " " + intern.Student.StudentSurname;
            var studentMail = intern.Student.StudentMail;
            //degısıklıgı ogrencıye haber verıyor
            helper2.stajDeğişiklik(nameSurname, studentMail);
            intern.InternStatusID = 8;
            return repoIntern.Update(intern);
        }
        //Stajı onaylamayan metot
        public int unconfirmIntern(int id)
        {
            //HelperClass h = new HelperClass();
            Intern intern = repoIntern.Find(x => x.InternID == id);
            var nameSurname = intern.Student.StudentName + " " + intern.Student.StudentSurname;
            var studentMail = intern.Student.StudentMail;
            //degısıklıgı ogrencıye haber verıyor
            helper2.stajDeğişiklik(nameSurname, studentMail);
            intern.InternStatusID = 4;
            return repoIntern.Update(intern);
        }
        //Stajı onay bekleyen durumuna getiren metot
        public int confirmWaiting(int id)
        {
            Intern intern = repoIntern.Find(x => x.InternID == id);
            var nameSurname = intern.Student.StudentName + " " + intern.Student.StudentSurname;
            var studentMail = intern.Student.StudentMail;
            //degısıklıgı ogrencıye haber verıyor
            helper2.stajDeğişiklik(nameSurname, studentMail);
            intern.InternStatusID = 3;
            return repoIntern.Update(intern);
        }
        //Stajı tamamlayan metot
        public int completeBl(int id)
        {
            Intern intern = repoIntern.Find(x => x.InternID == id);
            var nameSurname = intern.Student.StudentName + " " + intern.Student.StudentSurname;
            var studentMail = intern.Student.StudentMail;
            //degısıklıgı ogrencıye haber verıyor
            helper2.stajDeğişiklik(nameSurname, studentMail);
            intern.InternStatusID = 1;
            return repoIntern.Update(intern);
        }

    }
}

namespace BusinessLayer.Concrete
{
    public class HelpManager
    {
        Repository<Help> repoHelp = new Repository<Help>();
        public List<Help> GetAll()
        {
            return repoHelp.List();
        }
        public Help GetByID(int id)
        {
            return repoHelp.Find(x => x.HelpID == id);
        }
        public int UpdateHelp(Help p)
        {
            Help help = new Help();
            help = repoHelp.Find(x => x.HelpID == p.HelpID);
            help.HelpID = p.HelpID;
            help.HelpTitle = p.HelpTitle;
            help.HelpTitle2 = p.HelpTitle2;
            help.HelpLogo= p.HelpLogo;
            help.HelpContent1 = p.HelpContent1;
            help.HelpContent2 = p.HelpContent2; 
            help.HelpContent3 = p.HelpContent3; 
            return repoHelp.Update(help);
        }
        public int AddHelpBusiness(Help p)
        {
            return repoHelp.Insert(p);
        }
        public int DeleteHelp(int id)
        {
            Help help = new Help();
            help = repoHelp.Find(x => x.HelpID == id);
            return repoHelp.Delete(help);
        }
    }
}

namespace BusinessLayer.Concrete
{
    public class Helper2
    {
        //durum degısıklık maılı
        public string stajDeğişiklik(string stdntName, string stdntMail)
        {
            MailMessage eposta = new MailMessage();
            eposta.From = new MailAddress("KOUSTAJ2022@outlook.com");
            eposta.To.Add(stdntMail);
            eposta.Subject = "Staj Durumu Değişikliği !";
            eposta.Body = "Sayın "+ stdntName+ " Staj durumunuzda bir güncelleme var lütfen sisteme giriniz";

            SmtpClient smtp = new SmtpClient();
            smtp.Credentials = new System.Net.NetworkCredential("KOUSTAJ2022@outlook.com", "Yazlab2022.");
            smtp.Host = "smtp.outlook.com";
            smtp.EnableSsl = true;
            smtp.Port = 587;

            smtp.Send(eposta);
            Console.WriteLine("gonderıldı");
            return "deneme";
        }
        //iş günü hesaplayıcı
        public double GetBusinessDays(DateTime startD, DateTime endD)
        {
            double calcBusinessDays =
                1 + ((endD - startD).TotalDays * 5 -
                (startD.DayOfWeek - endD.DayOfWeek) * 2) / 7;

            if (endD.DayOfWeek == DayOfWeek.Saturday) calcBusinessDays--;
            if (startD.DayOfWeek == DayOfWeek.Sunday) calcBusinessDays--;

            return calcBusinessDays;
        }

    }
}

namespace BusinessLayer.Concrete
{
    public class AdminManager
    {
        Repository<Admin> repoAdmin = new Repository<Admin>();
        public List<Admin> GetAll()
        {
           return repoAdmin.List();
        }
    }
}
public interface IAdminDal: IRepository<Admin>
    {
    }
}
public interface IInternDal : IRepository<Intern>
    {
    }


    public interface IInternNameDal : IRepository<InternName>
    {
    }
}

namespace DataAccessLayer.Abstract
{
    public interface IInternStatusDal : IRepository<InternStatus>
    {
    }
}
namespace DataAccessLayer.Abstract
{
    public interface IRepository<T>
    {
        List<T> List();
        int Insert(T p);
        int Update(T p);
        int Delete(T p);

        T GetById(int id);
        T Find(Expression<Func<T, bool>> where);
    }
}

namespace DataAccessLayer.Abstract
{
    public interface IStudentDal : IRepository<Student>
    {
    }
}
namespace DataAccessLayer.Abstract
{
    public interface ITeacherDal : IRepository<Teacher>
    {
    }
}

namespace DataAccessLayer.Concrete
{
    public class Repository<T> : IRepository<T> where T : class
    {
        Context c = new Context();
        DbSet<T> _object;
        public Repository()
        {
            _object = c.Set<T>();
        }
        public int Delete(T p)
        {
            _object.Remove(p);
            return c.SaveChanges();
        }

        public T GetById(int id)
        {
            return _object.Find(id);
        }

        public int Insert(T p)
        {
            _object.Add(p);
            return c.SaveChanges();
        }

        public List<T> List()
        {
            return _object.ToList();
        }

        public int Update(T p)
        {
            return c.SaveChanges();
        }
        public T Find(Expression<Func<T, bool>> where)
        {
            return _object.FirstOrDefault(where);
        }
    }
}
namespace DataAccessLayer.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class mig2 : DbMigration
    {
        public override void Up()
        {
            AddColumn("dbo.Students", "StudentPassword", c => c.String());
            AddColumn("dbo.Teachers", "TeacherPassword", c => c.String());
        }
        
        public override void Down()
        {
            DropColumn("dbo.Teachers", "TeacherPassword");
            DropColumn("dbo.Students", "StudentPassword");
        }
    }
}
namespace DataAccessLayer.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class MİG3 : DbMigration
    {
        public override void Up()
        {
            AddColumn("dbo.Teachers", "TeacherMail", c => c.String());
        }
        
        public override void Down()
        {
            DropColumn("dbo.Teachers", "TeacherMail");
        }
    }
}
namespace DataAccessLayer.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class mig4 : DbMigration
    {
        public override void Up()
        {
            AddColumn("dbo.Admins", "AdminMail", c => c.String(maxLength: 30));
            DropColumn("dbo.Admins", "Username");
        }
        
        public override void Down()
        {
            AddColumn("dbo.Admins", "Username", c => c.String(maxLength: 30));
            DropColumn("dbo.Admins", "AdminMail");
        }
    }
}
namespace DataAccessLayer.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class mig5 : DbMigration
    {
        public override void Up()
        {
            AddColumn("dbo.Interns", "Title", c => c.String());
            AddColumn("dbo.Interns", "Filepath", c => c.String());
        }
        
        public override void Down()
        {
            DropColumn("dbo.Interns", "Filepath");
            DropColumn("dbo.Interns", "Title");
        }
    }
}
namespace DataAccessLayer.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class mig6 : DbMigration
    {
        public override void Up()
        {
            AddColumn("dbo.Interns", "TitleStajDefteri", c => c.String());
            AddColumn("dbo.Interns", "FilepathStajDefteri", c => c.String());
        }
        
        public override void Down()
        {
            DropColumn("dbo.Interns", "FilepathStajDefteri");
            DropColumn("dbo.Interns", "TitleStajDefteri");
        }
    }
}
namespace DataAccessLayer.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class mig7 : DbMigration
    {
        public override void Up()
        {
            AddColumn("dbo.Teachers", "TeacherRole", c => c.String(maxLength: 1));
            AlterColumn("dbo.Admins", "Role", c => c.String(maxLength: 1));
        }
        
        public override void Down()
        {
            AlterColumn("dbo.Admins", "Role", c => c.String(maxLength: 10));
            DropColumn("dbo.Teachers", "TeacherRole");
        }
    }
}
namespace DataAccessLayer.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class mig8 : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.Helps",
                c => new
                    {
                        HelpID = c.Int(nullable: false, identity: true),
                        HelpTitle = c.String(),
                        HelpTitle2 = c.String(),
                        HelpLogo = c.String(),
                        HelpContent1 = c.String(),
                        HelpContent2 = c.String(),
                        HelpContent3 = c.String(),
                    })
                .PrimaryKey(t => t.HelpID);
            
        }
        
        public override void Down()
        {
            DropTable("dbo.Helps");
        }
    }
}
namespace DataAccessLayer.Migrations
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Migrations;
    using System.Linq;

    internal sealed class Configuration : DbMigrationsConfiguration<DataAccessLayer.Context>
    {
        public Configuration()
        {
            AutomaticMigrationsEnabled = true;
        }

        protected override void Seed(DataAccessLayer.Context context)
        {
            //  This method will be called after migrating to the latest version.

            //  You can use the DbSet<T>.AddOrUpdate() helper extension method
            //  to avoid creating duplicate seed data.
        }
    }
}

namespace DataAccessLayer.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class mig9 : DbMigration
    {
        public override void Up()
        {
            AddColumn("dbo.Interns", "StajBelgesi", c => c.String());
            AddColumn("dbo.Interns", "StajDefteri", c => c.String());
            DropColumn("dbo.Interns", "Title");
            DropColumn("dbo.Interns", "Filepath");
            DropColumn("dbo.Interns", "TitleStajDefteri");
            DropColumn("dbo.Interns", "FilepathStajDefteri");
        }
        
        public override void Down()
        {
            AddColumn("dbo.Interns", "FilepathStajDefteri", c => c.String());
            AddColumn("dbo.Interns", "TitleStajDefteri", c => c.String());
            AddColumn("dbo.Interns", "Filepath", c => c.String());
            AddColumn("dbo.Interns", "Title", c => c.String());
            DropColumn("dbo.Interns", "StajDefteri");
            DropColumn("dbo.Interns", "StajBelgesi");
        }
    }
}
namespace EntityLayer.Concrete
{
    public class Admin
    {
        [Key]
        public int AdminID { get; set; }
        [StringLength(30)]
        public string AdminMail { get; set; }
        [StringLength(30)]
        public string Password { get; set; }
        [StringLength(1)]
        public string Role { get; set; }

    }
}
namespace EntityLayer.Concrete
{
    public class Help
    {
        [Key]
        public int HelpID { get; set; }
        public string HelpTitle { get; set; }
        public string HelpTitle2 { get; set; }
        public string HelpLogo { get; set; }
        public string HelpContent1 { get; set; }
        public string HelpContent2 { get; set; }
        public string HelpContent3 { get; set; }
    }
}

namespace EntityLayer.Concrete
{
    public class Intern
    {
        [Key]
        public int InternID { get; set; }
        [StringLength(50)]
        public string CompanyName { get; set; }
        [StringLength(30)]
        public string CompanyResponsible { get; set; }
        [StringLength(15)]
        public string CompanyResponsibleNumber { get; set; }

        public DateTime StartDate { get; set; }
        public DateTime FinishDate { get; set; }

        //file upload
        public string StajBelgesi { get; set; }
        public string StajDefteri { get; set; }

        //file upload
        public bool InternStatuss { get; set; }
        //Relations 
        public int InternNameID { get; set; }
        public virtual InternName InternName { get; set; }
        //Relations 
        public int InternStatusID { get; set; }
        public virtual InternStatus InternStatus { get; set; }
        //Relations 
        public int StudentID { get; set; }
        public virtual Student Student { get; set; }
    }
}

namespace EntityLayer.Concrete
{
    public class InternName
    {
        [Key]
        public int InternNameID { get; set; }
        [StringLength(30)]
        public string InternNamee { get; set; }
        [StringLength(150)]
        public string InternNameDesc { get; set; }
        public bool InternStatus { get; set; }
        //Relations 
        public ICollection<Intern> Interns { get; set; }

    }
}
namespace EntityLayer.Concrete
{
    public class InternStatus
    {
        [Key]
        public int InternStatusID { get; set; }
        [StringLength(30)]
        public string InternStatusName { get; set; }
        [StringLength(150)]
        public string InternStatusDesc { get; set; }
        public bool InternStatuss { get; set; }
        //Relations 
        public ICollection<Intern> Interns { get; set; }

    }
}

namespace EntityLayer.Concrete
{
    public class Student
    {
        [Key]
        public int StudentID { get; set; }
        [StringLength(30)]
        public string StudentName { get; set; }
        [StringLength(30)]
        public string StudentSurname { get; set; }
        [StringLength(50)]
        public string StudentMail { get; set; }
        [StringLength(20)]
        public string StudentNumber { get; set; }
        [StringLength(15)]
        public string StudentPhoneNumber { get; set; }
        [StringLength(10)]
        public string StudentGrade { get; set; }
        public string StudentPassword { get; set; }
        public bool StudentStatus { get; set; }
        //Relations
        public int TeacherID { get; set; }
        public virtual Teacher Teacher { get; set; }
        //Relations 
        public ICollection<Intern> Interns { get; set; }
    }
}
namespace EntityLayer.Concrete
{
    public class Teacher
    {
        [Key]
        public int TeacherID { get; set; }
        [StringLength(30)]
        public string TeacherName { get; set; }
        [StringLength(30)]
        public string TeacherSurname { get; set; }
        public string TeacherPassword { get; set; }
        public string TeacherMail { get; set; }
        public bool Commission { get; set; }
        [StringLength(1)]
        public string TeacherRole { get; set; }
        public bool TeacherStatus { get; set; }
        //Relations
        public ICollection<Student> Students { get; set; }

    }
}





